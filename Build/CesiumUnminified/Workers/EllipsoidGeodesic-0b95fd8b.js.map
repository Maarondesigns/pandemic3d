{"version":3,"file":"EllipsoidGeodesic-0b95fd8b.js","sources":["../../../../Source/Core/EllipsoidGeodesic.js"],"sourcesContent":["import Cartesian3 from './Cartesian3.js';\nimport Cartographic from './Cartographic.js';\nimport Check from './Check.js';\nimport defaultValue from './defaultValue.js';\nimport defined from './defined.js';\nimport Ellipsoid from './Ellipsoid.js';\nimport CesiumMath from './Math.js';\n\n    function setConstants(ellipsoidGeodesic) {\n        var uSquared = ellipsoidGeodesic._uSquared;\n        var a = ellipsoidGeodesic._ellipsoid.maximumRadius;\n        var b = ellipsoidGeodesic._ellipsoid.minimumRadius;\n        var f = (a - b) / a;\n\n        var cosineHeading = Math.cos(ellipsoidGeodesic._startHeading);\n        var sineHeading = Math.sin(ellipsoidGeodesic._startHeading);\n\n        var tanU = (1 - f) * Math.tan(ellipsoidGeodesic._start.latitude);\n\n        var cosineU = 1.0 / Math.sqrt(1.0 + tanU * tanU);\n        var sineU = cosineU * tanU;\n\n        var sigma = Math.atan2(tanU, cosineHeading);\n\n        var sineAlpha = cosineU * sineHeading;\n        var sineSquaredAlpha = sineAlpha * sineAlpha;\n\n        var cosineSquaredAlpha = 1.0 - sineSquaredAlpha;\n        var cosineAlpha = Math.sqrt(cosineSquaredAlpha);\n\n        var u2Over4 = uSquared / 4.0;\n        var u4Over16 = u2Over4 * u2Over4;\n        var u6Over64 = u4Over16 * u2Over4;\n        var u8Over256 = u4Over16 * u4Over16;\n\n        var a0 = (1.0 + u2Over4 - 3.0 * u4Over16 / 4.0 + 5.0 * u6Over64 / 4.0 - 175.0 * u8Over256 / 64.0);\n        var a1 = (1.0 - u2Over4 + 15.0 * u4Over16 / 8.0 - 35.0 * u6Over64 / 8.0);\n        var a2 = (1.0 - 3.0 * u2Over4 + 35.0 * u4Over16 / 4.0);\n        var a3 = (1.0 - 5.0 * u2Over4);\n\n        var distanceRatio = a0 * sigma - a1 * Math.sin(2.0 * sigma) * u2Over4 / 2.0 - a2 * Math.sin(4.0 * sigma) * u4Over16 / 16.0 -\n                            a3 * Math.sin(6.0 * sigma) * u6Over64 / 48.0 - Math.sin(8.0 * sigma) * 5.0 * u8Over256 / 512;\n\n        var constants = ellipsoidGeodesic._constants;\n\n        constants.a = a;\n        constants.b = b;\n        constants.f = f;\n        constants.cosineHeading = cosineHeading;\n        constants.sineHeading = sineHeading;\n        constants.tanU = tanU;\n        constants.cosineU = cosineU;\n        constants.sineU = sineU;\n        constants.sigma = sigma;\n        constants.sineAlpha = sineAlpha;\n        constants.sineSquaredAlpha = sineSquaredAlpha;\n        constants.cosineSquaredAlpha = cosineSquaredAlpha;\n        constants.cosineAlpha = cosineAlpha;\n        constants.u2Over4 = u2Over4;\n        constants.u4Over16 = u4Over16;\n        constants.u6Over64 = u6Over64;\n        constants.u8Over256 = u8Over256;\n        constants.a0 = a0;\n        constants.a1 = a1;\n        constants.a2 = a2;\n        constants.a3 = a3;\n        constants.distanceRatio = distanceRatio;\n    }\n\n    function computeC(f, cosineSquaredAlpha) {\n        return f * cosineSquaredAlpha * (4.0 + f * (4.0 - 3.0 * cosineSquaredAlpha)) / 16.0;\n    }\n\n    function computeDeltaLambda(f, sineAlpha, cosineSquaredAlpha, sigma, sineSigma, cosineSigma, cosineTwiceSigmaMidpoint) {\n        var C = computeC(f, cosineSquaredAlpha);\n\n        return (1.0 - C) * f * sineAlpha * (sigma + C * sineSigma * (cosineTwiceSigmaMidpoint +\n                C * cosineSigma * (2.0 * cosineTwiceSigmaMidpoint * cosineTwiceSigmaMidpoint - 1.0)));\n    }\n\n    function vincentyInverseFormula(ellipsoidGeodesic, major, minor, firstLongitude, firstLatitude, secondLongitude, secondLatitude) {\n        var eff = (major - minor) / major;\n        var l = secondLongitude - firstLongitude;\n\n        var u1 = Math.atan((1 - eff) * Math.tan(firstLatitude));\n        var u2 = Math.atan((1 - eff) * Math.tan(secondLatitude));\n\n        var cosineU1 = Math.cos(u1);\n        var sineU1 = Math.sin(u1);\n        var cosineU2 = Math.cos(u2);\n        var sineU2 = Math.sin(u2);\n\n        var cc = cosineU1 * cosineU2;\n        var cs = cosineU1 * sineU2;\n        var ss = sineU1 * sineU2;\n        var sc = sineU1 * cosineU2;\n\n        var lambda = l;\n        var lambdaDot = CesiumMath.TWO_PI;\n\n        var cosineLambda = Math.cos(lambda);\n        var sineLambda = Math.sin(lambda);\n\n        var sigma;\n        var cosineSigma;\n        var sineSigma;\n        var cosineSquaredAlpha;\n        var cosineTwiceSigmaMidpoint;\n\n        do {\n            cosineLambda = Math.cos(lambda);\n            sineLambda = Math.sin(lambda);\n\n            var temp = cs - sc * cosineLambda;\n            sineSigma = Math.sqrt(cosineU2 * cosineU2 * sineLambda * sineLambda + temp * temp);\n            cosineSigma = ss + cc * cosineLambda;\n\n            sigma = Math.atan2(sineSigma, cosineSigma);\n\n            var sineAlpha;\n\n            if (sineSigma === 0.0) {\n                sineAlpha = 0.0;\n                cosineSquaredAlpha = 1.0;\n            } else {\n                sineAlpha = cc * sineLambda / sineSigma;\n                cosineSquaredAlpha = 1.0 - sineAlpha * sineAlpha;\n            }\n\n            lambdaDot = lambda;\n\n            cosineTwiceSigmaMidpoint = cosineSigma - 2.0 * ss / cosineSquaredAlpha;\n\n            if (isNaN(cosineTwiceSigmaMidpoint)) {\n                cosineTwiceSigmaMidpoint = 0.0;\n            }\n\n            lambda = l + computeDeltaLambda(eff, sineAlpha, cosineSquaredAlpha,\n                                            sigma, sineSigma, cosineSigma, cosineTwiceSigmaMidpoint);\n        } while (Math.abs(lambda - lambdaDot) > CesiumMath.EPSILON12);\n\n        var uSquared = cosineSquaredAlpha * (major * major - minor * minor) / (minor * minor);\n        var A = 1.0 + uSquared * (4096.0 + uSquared * (uSquared * (320.0 - 175.0 * uSquared) - 768.0)) / 16384.0;\n        var B = uSquared * (256.0 + uSquared * (uSquared * (74.0 - 47.0 * uSquared) - 128.0)) / 1024.0;\n\n        var cosineSquaredTwiceSigmaMidpoint = cosineTwiceSigmaMidpoint * cosineTwiceSigmaMidpoint;\n        var deltaSigma = B * sineSigma * (cosineTwiceSigmaMidpoint + B * (cosineSigma *\n                (2.0 * cosineSquaredTwiceSigmaMidpoint - 1.0) - B * cosineTwiceSigmaMidpoint *\n                (4.0 * sineSigma * sineSigma - 3.0) * (4.0 * cosineSquaredTwiceSigmaMidpoint - 3.0) / 6.0) / 4.0);\n\n        var distance = minor * A * (sigma - deltaSigma);\n\n        var startHeading = Math.atan2(cosineU2 * sineLambda, cs - sc * cosineLambda);\n        var endHeading = Math.atan2(cosineU1 * sineLambda, cs * cosineLambda - sc);\n\n        ellipsoidGeodesic._distance = distance;\n        ellipsoidGeodesic._startHeading = startHeading;\n        ellipsoidGeodesic._endHeading = endHeading;\n        ellipsoidGeodesic._uSquared = uSquared;\n    }\n\n    var scratchCart1 = new Cartesian3();\n    var scratchCart2 = new Cartesian3();\n    function computeProperties(ellipsoidGeodesic, start, end, ellipsoid) {\n        var firstCartesian = Cartesian3.normalize(ellipsoid.cartographicToCartesian(start, scratchCart2), scratchCart1);\n        var lastCartesian = Cartesian3.normalize(ellipsoid.cartographicToCartesian(end, scratchCart2), scratchCart2);\n\n        //>>includeStart('debug', pragmas.debug);\n        Check.typeOf.number.greaterThanOrEquals('value', Math.abs(Math.abs(Cartesian3.angleBetween(firstCartesian, lastCartesian)) - Math.PI), 0.0125);\n        //>>includeEnd('debug');\n\n        vincentyInverseFormula(ellipsoidGeodesic, ellipsoid.maximumRadius, ellipsoid.minimumRadius,\n                               start.longitude, start.latitude, end.longitude, end.latitude);\n\n        ellipsoidGeodesic._start = Cartographic.clone(start, ellipsoidGeodesic._start);\n        ellipsoidGeodesic._end = Cartographic.clone(end, ellipsoidGeodesic._end);\n        ellipsoidGeodesic._start.height = 0;\n        ellipsoidGeodesic._end.height = 0;\n\n        setConstants(ellipsoidGeodesic);\n    }\n\n    /**\n     * Initializes a geodesic on the ellipsoid connecting the two provided planetodetic points.\n     *\n     * @alias EllipsoidGeodesic\n     * @constructor\n     *\n     * @param {Cartographic} [start] The initial planetodetic point on the path.\n     * @param {Cartographic} [end] The final planetodetic point on the path.\n     * @param {Ellipsoid} [ellipsoid=Ellipsoid.WGS84] The ellipsoid on which the geodesic lies.\n     */\n    function EllipsoidGeodesic(start, end, ellipsoid) {\n        var e = defaultValue(ellipsoid, Ellipsoid.WGS84);\n        this._ellipsoid = e;\n        this._start = new Cartographic();\n        this._end = new Cartographic();\n\n        this._constants = {};\n        this._startHeading = undefined;\n        this._endHeading = undefined;\n        this._distance = undefined;\n        this._uSquared = undefined;\n\n        if (defined(start) && defined(end)) {\n            computeProperties(this, start, end, e);\n        }\n    }\n\n    Object.defineProperties(EllipsoidGeodesic.prototype, {\n        /**\n         * Gets the ellipsoid.\n         * @memberof EllipsoidGeodesic.prototype\n         * @type {Ellipsoid}\n         * @readonly\n         */\n        ellipsoid : {\n            get : function() {\n                return this._ellipsoid;\n            }\n        },\n\n        /**\n         * Gets the surface distance between the start and end point\n         * @memberof EllipsoidGeodesic.prototype\n         * @type {Number}\n         * @readonly\n         */\n        surfaceDistance : {\n            get : function() {\n                //>>includeStart('debug', pragmas.debug);\n                Check.defined('distance', this._distance);\n                //>>includeEnd('debug');\n\n                return this._distance;\n            }\n        },\n\n        /**\n         * Gets the initial planetodetic point on the path.\n         * @memberof EllipsoidGeodesic.prototype\n         * @type {Cartographic}\n         * @readonly\n         */\n        start : {\n            get : function() {\n                return this._start;\n            }\n        },\n\n        /**\n         * Gets the final planetodetic point on the path.\n         * @memberof EllipsoidGeodesic.prototype\n         * @type {Cartographic}\n         * @readonly\n         */\n        end : {\n            get : function() {\n                return this._end;\n            }\n        },\n\n        /**\n         * Gets the heading at the initial point.\n         * @memberof EllipsoidGeodesic.prototype\n         * @type {Number}\n         * @readonly\n         */\n        startHeading : {\n            get : function() {\n                //>>includeStart('debug', pragmas.debug);\n                Check.defined('distance', this._distance);\n                //>>includeEnd('debug');\n\n                return this._startHeading;\n            }\n        },\n\n        /**\n         * Gets the heading at the final point.\n         * @memberof EllipsoidGeodesic.prototype\n         * @type {Number}\n         * @readonly\n         */\n        endHeading : {\n            get : function() {\n                //>>includeStart('debug', pragmas.debug);\n                Check.defined('distance', this._distance);\n                //>>includeEnd('debug');\n\n                return this._endHeading;\n            }\n        }\n    });\n\n    /**\n     * Sets the start and end points of the geodesic\n     *\n     * @param {Cartographic} start The initial planetodetic point on the path.\n     * @param {Cartographic} end The final planetodetic point on the path.\n     */\n    EllipsoidGeodesic.prototype.setEndPoints = function(start, end) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.defined('start', start);\n        Check.defined('end', end);\n        //>>includeEnd('debug');\n\n        computeProperties(this, start, end, this._ellipsoid);\n    };\n\n    /**\n     * Provides the location of a point at the indicated portion along the geodesic.\n     *\n     * @param {Number} fraction The portion of the distance between the initial and final points.\n     * @param {Cartographic} result The object in which to store the result.\n     * @returns {Cartographic} The location of the point along the geodesic.\n     */\n    EllipsoidGeodesic.prototype.interpolateUsingFraction = function(fraction, result) {\n        return this.interpolateUsingSurfaceDistance(this._distance * fraction, result);\n    };\n\n    /**\n     * Provides the location of a point at the indicated distance along the geodesic.\n     *\n     * @param {Number} distance The distance from the inital point to the point of interest along the geodesic\n     * @param {Cartographic} result The object in which to store the result.\n     * @returns {Cartographic} The location of the point along the geodesic.\n     *\n     * @exception {DeveloperError} start and end must be set before calling function interpolateUsingSurfaceDistance\n     */\n    EllipsoidGeodesic.prototype.interpolateUsingSurfaceDistance = function(distance, result) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.defined('distance', this._distance);\n        //>>includeEnd('debug');\n\n        var constants = this._constants;\n\n        var s = constants.distanceRatio + distance / constants.b;\n\n        var cosine2S = Math.cos(2.0 * s);\n        var cosine4S = Math.cos(4.0 * s);\n        var cosine6S = Math.cos(6.0 * s);\n        var sine2S = Math.sin(2.0 * s);\n        var sine4S = Math.sin(4.0 * s);\n        var sine6S = Math.sin(6.0 * s);\n        var sine8S = Math.sin(8.0 * s);\n\n        var s2 = s * s;\n        var s3 = s * s2;\n\n        var u8Over256 = constants.u8Over256;\n        var u2Over4 = constants.u2Over4;\n        var u6Over64 = constants.u6Over64;\n        var u4Over16 = constants.u4Over16;\n        var sigma = 2.0 * s3 * u8Over256 * cosine2S / 3.0 +\n            s * (1.0 - u2Over4 + 7.0 * u4Over16 / 4.0 - 15.0 * u6Over64 / 4.0 + 579.0 * u8Over256 / 64.0 -\n            (u4Over16 - 15.0 * u6Over64 / 4.0 + 187.0 * u8Over256 / 16.0) * cosine2S -\n            (5.0 * u6Over64 / 4.0 - 115.0 * u8Over256 / 16.0) * cosine4S -\n            29.0 * u8Over256 * cosine6S / 16.0) +\n            (u2Over4 / 2.0 - u4Over16 + 71.0 * u6Over64 / 32.0 - 85.0 * u8Over256 / 16.0) * sine2S +\n            (5.0 * u4Over16 / 16.0 - 5.0 * u6Over64 / 4.0 + 383.0 * u8Over256 / 96.0) * sine4S -\n            s2 * ((u6Over64 - 11.0 * u8Over256 / 2.0) * sine2S + 5.0 * u8Over256 * sine4S / 2.0) +\n            (29.0 * u6Over64 / 96.0 - 29.0 * u8Over256 / 16.0) * sine6S +\n            539.0 * u8Over256 * sine8S / 1536.0;\n\n        var theta = Math.asin(Math.sin(sigma) * constants.cosineAlpha);\n        var latitude = Math.atan(constants.a / constants.b * Math.tan(theta));\n\n        // Redefine in terms of relative argument of latitude.\n        sigma = sigma - constants.sigma;\n\n        var cosineTwiceSigmaMidpoint = Math.cos(2.0 * constants.sigma + sigma);\n\n        var sineSigma = Math.sin(sigma);\n        var cosineSigma = Math.cos(sigma);\n\n        var cc = constants.cosineU * cosineSigma;\n        var ss = constants.sineU * sineSigma;\n\n        var lambda = Math.atan2(sineSigma * constants.sineHeading, cc - ss * constants.cosineHeading);\n\n        var l = lambda - computeDeltaLambda(constants.f, constants.sineAlpha, constants.cosineSquaredAlpha,\n                                            sigma, sineSigma, cosineSigma, cosineTwiceSigmaMidpoint);\n\n        if (defined(result)) {\n            result.longitude = this._start.longitude + l;\n            result.latitude = latitude;\n            result.height = 0.0;\n            return result;\n        }\n\n        return new Cartographic(this._start.longitude + l, latitude, 0.0);\n    };\nexport default EllipsoidGeodesic;\n"],"names":["CesiumMath","Cartesian3","Check","Cartographic","defaultValue","Ellipsoid","defined"],"mappings":"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"}