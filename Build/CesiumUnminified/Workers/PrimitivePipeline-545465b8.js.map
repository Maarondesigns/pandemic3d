{"version":3,"file":"PrimitivePipeline-545465b8.js","sources":["../../../../Source/Core/OffsetGeometryInstanceAttribute.js","../../../../Source/Scene/PrimitivePipeline.js"],"sourcesContent":["import Check from './Check.js';\nimport ComponentDatatype from './ComponentDatatype.js';\nimport defaultValue from './defaultValue.js';\nimport defined from './defined.js';\n\n    /**\n     * Value and type information for per-instance geometry attribute that determines the geometry instance offset\n     *\n     * @alias OffsetGeometryInstanceAttribute\n     * @constructor\n     *\n     * @param {Number} [x=0] The x translation\n     * @param {Number} [y=0] The y translation\n     * @param {Number} [z=0] The z translation\n     *\n     * @private\n     *\n     * @see GeometryInstance\n     * @see GeometryInstanceAttribute\n     */\n    function OffsetGeometryInstanceAttribute(x, y, z) {\n        x = defaultValue(x, 0);\n        y = defaultValue(y, 0);\n        z = defaultValue(z, 0);\n\n        /**\n         * The values for the attributes stored in a typed array.\n         *\n         * @type Float32Array\n         */\n        this.value = new Float32Array([x, y, z]);\n    }\n\n    Object.defineProperties(OffsetGeometryInstanceAttribute.prototype, {\n        /**\n         * The datatype of each component in the attribute, e.g., individual elements in\n         * {@link OffsetGeometryInstanceAttribute#value}.\n         *\n         * @memberof OffsetGeometryInstanceAttribute.prototype\n         *\n         * @type {ComponentDatatype}\n         * @readonly\n         *\n         * @default {@link ComponentDatatype.FLOAT}\n         */\n        componentDatatype : {\n            get : function() {\n                return ComponentDatatype.FLOAT;\n            }\n        },\n\n        /**\n         * The number of components in the attributes, i.e., {@link OffsetGeometryInstanceAttribute#value}.\n         *\n         * @memberof OffsetGeometryInstanceAttribute.prototype\n         *\n         * @type {Number}\n         * @readonly\n         *\n         * @default 3\n         */\n        componentsPerAttribute : {\n            get : function() {\n                return 3;\n            }\n        },\n\n        /**\n         * When <code>true</code> and <code>componentDatatype</code> is an integer format,\n         * indicate that the components should be mapped to the range [0, 1] (unsigned)\n         * or [-1, 1] (signed) when they are accessed as floating-point for rendering.\n         *\n         * @memberof OffsetGeometryInstanceAttribute.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         *\n         * @default false\n         */\n        normalize : {\n            get : function() {\n                return false;\n            }\n        }\n    });\n\n    /**\n     * Creates a new {@link OffsetGeometryInstanceAttribute} instance given the provided an enabled flag and {@link DistanceDisplayCondition}.\n     *\n     * @param {Cartesian3} offset The cartesian offset\n     * @returns {OffsetGeometryInstanceAttribute} The new {@link OffsetGeometryInstanceAttribute} instance.\n     */\n    OffsetGeometryInstanceAttribute.fromCartesian3 = function(offset) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.defined('offset', offset);\n        //>>includeEnd('debug');\n\n        return new OffsetGeometryInstanceAttribute(offset.x, offset.y, offset.z);\n    };\n\n    /**\n     * Converts a distance display condition to a typed array that can be used to assign a distance display condition attribute.\n     *\n     * @param {Cartesian3} offset The cartesian offset\n     * @param {Float32Array} [result] The array to store the result in, if undefined a new instance will be created.\n     * @returns {Float32Array} The modified result parameter or a new instance if result was undefined.\n     *\n     * @example\n     * var attributes = primitive.getGeometryInstanceAttributes('an id');\n     * attributes.modelMatrix = Cesium.OffsetGeometryInstanceAttribute.toValue(modelMatrix, attributes.modelMatrix);\n     */\n    OffsetGeometryInstanceAttribute.toValue = function(offset, result) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.defined('offset', offset);\n        //>>includeEnd('debug');\n\n        if (!defined(result)) {\n            result = new Float32Array([offset.x, offset.y, offset.z]);\n        }\n\n        result[0] = offset.x;\n        result[1] = offset.y;\n        result[2] = offset.z;\n        return result;\n    };\nexport default OffsetGeometryInstanceAttribute;\n","import BoundingSphere from '../Core/BoundingSphere.js';\nimport ComponentDatatype from '../Core/ComponentDatatype.js';\nimport defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport DeveloperError from '../Core/DeveloperError.js';\nimport Ellipsoid from '../Core/Ellipsoid.js';\nimport GeographicProjection from '../Core/GeographicProjection.js';\nimport Geometry from '../Core/Geometry.js';\nimport GeometryAttribute from '../Core/GeometryAttribute.js';\nimport GeometryAttributes from '../Core/GeometryAttributes.js';\nimport GeometryPipeline from '../Core/GeometryPipeline.js';\nimport IndexDatatype from '../Core/IndexDatatype.js';\nimport Matrix4 from '../Core/Matrix4.js';\nimport OffsetGeometryInstanceAttribute from '../Core/OffsetGeometryInstanceAttribute.js';\nimport WebMercatorProjection from '../Core/WebMercatorProjection.js';\n\n    function transformToWorldCoordinates(instances, primitiveModelMatrix, scene3DOnly) {\n        var toWorld = !scene3DOnly;\n        var length = instances.length;\n        var i;\n\n        if (!toWorld && (length > 1)) {\n            var modelMatrix = instances[0].modelMatrix;\n\n            for (i = 1; i < length; ++i) {\n                if (!Matrix4.equals(modelMatrix, instances[i].modelMatrix)) {\n                    toWorld = true;\n                    break;\n                }\n            }\n        }\n\n        if (toWorld) {\n            for (i = 0; i < length; ++i) {\n                if (defined(instances[i].geometry)) {\n                    GeometryPipeline.transformToWorldCoordinates(instances[i]);\n                }\n            }\n        } else {\n            // Leave geometry in local coordinate system; auto update model-matrix.\n            Matrix4.multiplyTransformation(primitiveModelMatrix, instances[0].modelMatrix, primitiveModelMatrix);\n        }\n    }\n\n    function addGeometryBatchId(geometry, batchId) {\n        var attributes = geometry.attributes;\n        var positionAttr = attributes.position;\n        var numberOfComponents = positionAttr.values.length / positionAttr.componentsPerAttribute;\n\n        attributes.batchId = new GeometryAttribute({\n            componentDatatype : ComponentDatatype.FLOAT,\n            componentsPerAttribute : 1,\n            values : new Float32Array(numberOfComponents)\n        });\n\n        var values = attributes.batchId.values;\n        for (var j = 0; j < numberOfComponents; ++j) {\n            values[j] = batchId;\n        }\n    }\n\n    function addBatchIds(instances) {\n        var length = instances.length;\n\n        for (var i = 0; i < length; ++i) {\n            var instance = instances[i];\n            if (defined(instance.geometry)) {\n                addGeometryBatchId(instance.geometry, i);\n            } else if (defined(instance.westHemisphereGeometry) && defined(instance.eastHemisphereGeometry)) {\n                addGeometryBatchId(instance.westHemisphereGeometry, i);\n                addGeometryBatchId(instance.eastHemisphereGeometry, i);\n            }\n        }\n    }\n\n    function geometryPipeline(parameters) {\n        var instances = parameters.instances;\n        var projection = parameters.projection;\n        var uintIndexSupport = parameters.elementIndexUintSupported;\n        var scene3DOnly = parameters.scene3DOnly;\n        var vertexCacheOptimize = parameters.vertexCacheOptimize;\n        var compressVertices = parameters.compressVertices;\n        var modelMatrix = parameters.modelMatrix;\n\n        var i;\n        var geometry;\n        var primitiveType;\n        var length = instances.length;\n\n        for (i = 0; i < length; ++i) {\n            if (defined(instances[i].geometry)) {\n                primitiveType = instances[i].geometry.primitiveType;\n                break;\n            }\n        }\n\n        //>>includeStart('debug', pragmas.debug);\n        for (i = 1; i < length; ++i) {\n            if (defined(instances[i].geometry) && instances[i].geometry.primitiveType !== primitiveType) {\n                throw new DeveloperError('All instance geometries must have the same primitiveType.');\n            }\n        }\n        //>>includeEnd('debug');\n\n        // Unify to world coordinates before combining.\n        transformToWorldCoordinates(instances, modelMatrix, scene3DOnly);\n\n        // Clip to IDL\n        if (!scene3DOnly) {\n            for (i = 0; i < length; ++i) {\n                if (defined(instances[i].geometry)) {\n                    GeometryPipeline.splitLongitude(instances[i]);\n                }\n            }\n        }\n\n        addBatchIds(instances);\n\n        // Optimize for vertex shader caches\n        if (vertexCacheOptimize) {\n            for (i = 0; i < length; ++i) {\n                var instance = instances[i];\n                if (defined(instance.geometry)) {\n                    GeometryPipeline.reorderForPostVertexCache(instance.geometry);\n                    GeometryPipeline.reorderForPreVertexCache(instance.geometry);\n                } else if (defined(instance.westHemisphereGeometry) && defined(instance.eastHemisphereGeometry)) {\n                    GeometryPipeline.reorderForPostVertexCache(instance.westHemisphereGeometry);\n                    GeometryPipeline.reorderForPreVertexCache(instance.westHemisphereGeometry);\n\n                    GeometryPipeline.reorderForPostVertexCache(instance.eastHemisphereGeometry);\n                    GeometryPipeline.reorderForPreVertexCache(instance.eastHemisphereGeometry);\n                }\n            }\n        }\n\n        // Combine into single geometry for better rendering performance.\n        var geometries = GeometryPipeline.combineInstances(instances);\n\n        length = geometries.length;\n        for (i = 0; i < length; ++i) {\n            geometry = geometries[i];\n\n            // Split positions for GPU RTE\n            var attributes = geometry.attributes;\n            var name;\n            if (!scene3DOnly) {\n                for (name in attributes) {\n                    if (attributes.hasOwnProperty(name) && attributes[name].componentDatatype === ComponentDatatype.DOUBLE) {\n                        var name3D = name + '3D';\n                        var name2D = name + '2D';\n\n                        // Compute 2D positions\n                        GeometryPipeline.projectTo2D(geometry, name, name3D, name2D, projection);\n                        if (defined(geometry.boundingSphere) && name === 'position') {\n                            geometry.boundingSphereCV = BoundingSphere.fromVertices(geometry.attributes.position2D.values);\n                        }\n\n                        GeometryPipeline.encodeAttribute(geometry, name3D, name3D + 'High', name3D + 'Low');\n                        GeometryPipeline.encodeAttribute(geometry, name2D, name2D + 'High', name2D + 'Low');\n                    }\n                }\n            } else {\n                for (name in attributes) {\n                    if (attributes.hasOwnProperty(name) && attributes[name].componentDatatype === ComponentDatatype.DOUBLE) {\n                        GeometryPipeline.encodeAttribute(geometry, name, name + '3DHigh', name + '3DLow');\n                    }\n                }\n            }\n\n            // oct encode and pack normals, compress texture coordinates\n            if (compressVertices) {\n                GeometryPipeline.compressVertices(geometry);\n            }\n        }\n\n        if (!uintIndexSupport) {\n            // Break into multiple geometries to fit within unsigned short indices if needed\n            var splitGeometries = [];\n            length = geometries.length;\n            for (i = 0; i < length; ++i) {\n                geometry = geometries[i];\n                splitGeometries = splitGeometries.concat(GeometryPipeline.fitToUnsignedShortIndices(geometry));\n            }\n\n            geometries = splitGeometries;\n        }\n\n        return geometries;\n    }\n\n    function createPickOffsets(instances, geometryName, geometries, pickOffsets) {\n        var offset;\n        var indexCount;\n        var geometryIndex;\n\n        var offsetIndex = pickOffsets.length - 1;\n        if (offsetIndex >= 0) {\n            var pickOffset = pickOffsets[offsetIndex];\n            offset = pickOffset.offset + pickOffset.count;\n            geometryIndex = pickOffset.index;\n            indexCount = geometries[geometryIndex].indices.length;\n        } else {\n            offset = 0;\n            geometryIndex = 0;\n            indexCount = geometries[geometryIndex].indices.length;\n        }\n\n        var length = instances.length;\n        for (var i = 0; i < length; ++i) {\n            var instance = instances[i];\n            var geometry = instance[geometryName];\n            if (!defined(geometry)) {\n                continue;\n            }\n\n            var count = geometry.indices.length;\n\n            if (offset + count > indexCount) {\n                offset = 0;\n                indexCount = geometries[++geometryIndex].indices.length;\n            }\n\n            pickOffsets.push({\n                index : geometryIndex,\n                offset : offset,\n                count : count\n            });\n            offset += count;\n        }\n    }\n\n    function createInstancePickOffsets(instances, geometries) {\n        var pickOffsets = [];\n        createPickOffsets(instances, 'geometry', geometries, pickOffsets);\n        createPickOffsets(instances, 'westHemisphereGeometry', geometries, pickOffsets);\n        createPickOffsets(instances, 'eastHemisphereGeometry', geometries, pickOffsets);\n        return pickOffsets;\n    }\n\n    /**\n     * @private\n     */\n    var PrimitivePipeline = {};\n\n    /**\n     * @private\n     */\n    PrimitivePipeline.combineGeometry = function(parameters) {\n        var geometries;\n        var attributeLocations;\n        var instances = parameters.instances;\n        var length = instances.length;\n        var pickOffsets;\n\n        var offsetInstanceExtend;\n        var hasOffset = false;\n        if (length > 0) {\n            geometries = geometryPipeline(parameters);\n            if (geometries.length > 0) {\n                attributeLocations = GeometryPipeline.createAttributeLocations(geometries[0]);\n                if (parameters.createPickOffsets) {\n                    pickOffsets = createInstancePickOffsets(instances, geometries);\n                }\n            }\n            if (defined(instances[0].attributes) && defined(instances[0].attributes.offset)) {\n                offsetInstanceExtend = new Array(length);\n                hasOffset = true;\n            }\n        }\n\n        var boundingSpheres = new Array(length);\n        var boundingSpheresCV = new Array(length);\n        for (var i = 0; i < length; ++i) {\n            var instance = instances[i];\n            var geometry = instance.geometry;\n            if (defined(geometry)) {\n                boundingSpheres[i] = geometry.boundingSphere;\n                boundingSpheresCV[i] = geometry.boundingSphereCV;\n                if (hasOffset) {\n                    offsetInstanceExtend[i] = instance.geometry.offsetAttribute;\n                }\n            }\n\n            var eastHemisphereGeometry = instance.eastHemisphereGeometry;\n            var westHemisphereGeometry = instance.westHemisphereGeometry;\n            if (defined(eastHemisphereGeometry) && defined(westHemisphereGeometry)) {\n                if (defined(eastHemisphereGeometry.boundingSphere) && defined(westHemisphereGeometry.boundingSphere)) {\n                    boundingSpheres[i] = BoundingSphere.union(eastHemisphereGeometry.boundingSphere, westHemisphereGeometry.boundingSphere);\n                }\n                if (defined(eastHemisphereGeometry.boundingSphereCV) && defined(westHemisphereGeometry.boundingSphereCV)) {\n                    boundingSpheresCV[i] = BoundingSphere.union(eastHemisphereGeometry.boundingSphereCV, westHemisphereGeometry.boundingSphereCV);\n                }\n            }\n        }\n\n        return {\n            geometries : geometries,\n            modelMatrix : parameters.modelMatrix,\n            attributeLocations : attributeLocations,\n            pickOffsets : pickOffsets,\n            offsetInstanceExtend : offsetInstanceExtend,\n            boundingSpheres : boundingSpheres,\n            boundingSpheresCV : boundingSpheresCV\n        };\n    };\n\n    function transferGeometry(geometry, transferableObjects) {\n        var attributes = geometry.attributes;\n        for (var name in attributes) {\n            if (attributes.hasOwnProperty(name)) {\n                var attribute = attributes[name];\n\n                if (defined(attribute) && defined(attribute.values)) {\n                    transferableObjects.push(attribute.values.buffer);\n                }\n            }\n        }\n\n        if (defined(geometry.indices)) {\n            transferableObjects.push(geometry.indices.buffer);\n        }\n    }\n\n    function transferGeometries(geometries, transferableObjects) {\n        var length = geometries.length;\n        for (var i = 0; i < length; ++i) {\n            transferGeometry(geometries[i], transferableObjects);\n        }\n    }\n\n    // This function was created by simplifying packCreateGeometryResults into a count-only operation.\n    function countCreateGeometryResults(items) {\n        var count = 1;\n        var length = items.length;\n        for (var i = 0; i < length; i++) {\n            var geometry = items[i];\n            ++count;\n\n            if (!defined(geometry)) {\n                continue;\n            }\n\n            var attributes = geometry.attributes;\n\n            count += 7 + 2 * BoundingSphere.packedLength + (defined(geometry.indices) ? geometry.indices.length : 0);\n\n            for (var property in attributes) {\n                if (attributes.hasOwnProperty(property) && defined(attributes[property])) {\n                    var attribute = attributes[property];\n                    count += 5 + attribute.values.length;\n                }\n            }\n        }\n\n        return count;\n    }\n\n    /**\n     * @private\n     */\n    PrimitivePipeline.packCreateGeometryResults = function(items, transferableObjects) {\n        var packedData = new Float64Array(countCreateGeometryResults(items));\n        var stringTable = [];\n        var stringHash = {};\n\n        var length = items.length;\n        var count = 0;\n        packedData[count++] = length;\n        for (var i = 0; i < length; i++) {\n            var geometry = items[i];\n\n            var validGeometry = defined(geometry);\n            packedData[count++] = validGeometry ? 1.0 : 0.0;\n\n            if (!validGeometry) {\n                continue;\n            }\n\n            packedData[count++] = geometry.primitiveType;\n            packedData[count++] = geometry.geometryType;\n            packedData[count++] = defaultValue(geometry.offsetAttribute, -1);\n\n            var validBoundingSphere = defined(geometry.boundingSphere) ? 1.0 : 0.0;\n            packedData[count++] = validBoundingSphere;\n            if (validBoundingSphere) {\n                BoundingSphere.pack(geometry.boundingSphere, packedData, count);\n            }\n\n            count += BoundingSphere.packedLength;\n\n            var validBoundingSphereCV = defined(geometry.boundingSphereCV) ? 1.0 : 0.0;\n            packedData[count++] = validBoundingSphereCV;\n            if (validBoundingSphereCV) {\n                BoundingSphere.pack(geometry.boundingSphereCV, packedData, count);\n            }\n\n            count += BoundingSphere.packedLength;\n\n            var attributes = geometry.attributes;\n            var attributesToWrite = [];\n            for (var property in attributes) {\n                if (attributes.hasOwnProperty(property) && defined(attributes[property])) {\n                    attributesToWrite.push(property);\n                    if (!defined(stringHash[property])) {\n                        stringHash[property] = stringTable.length;\n                        stringTable.push(property);\n                    }\n                }\n            }\n\n            packedData[count++] = attributesToWrite.length;\n            for (var q = 0; q < attributesToWrite.length; q++) {\n                var name = attributesToWrite[q];\n                var attribute = attributes[name];\n                packedData[count++] = stringHash[name];\n                packedData[count++] = attribute.componentDatatype;\n                packedData[count++] = attribute.componentsPerAttribute;\n                packedData[count++] = attribute.normalize ? 1 : 0;\n                packedData[count++] = attribute.values.length;\n                packedData.set(attribute.values, count);\n                count += attribute.values.length;\n            }\n\n            var indicesLength = defined(geometry.indices) ? geometry.indices.length : 0;\n            packedData[count++] = indicesLength;\n\n            if (indicesLength > 0) {\n                packedData.set(geometry.indices, count);\n                count += indicesLength;\n            }\n        }\n\n        transferableObjects.push(packedData.buffer);\n\n        return {\n            stringTable : stringTable,\n            packedData : packedData\n        };\n    };\n\n    /**\n     * @private\n     */\n    PrimitivePipeline.unpackCreateGeometryResults = function(createGeometryResult) {\n        var stringTable = createGeometryResult.stringTable;\n        var packedGeometry = createGeometryResult.packedData;\n\n        var i;\n        var result = new Array(packedGeometry[0]);\n        var resultIndex = 0;\n\n        var packedGeometryIndex = 1;\n        while (packedGeometryIndex < packedGeometry.length) {\n            var valid = packedGeometry[packedGeometryIndex++] === 1.0;\n            if (!valid) {\n                result[resultIndex++] = undefined;\n                continue;\n            }\n\n            var primitiveType = packedGeometry[packedGeometryIndex++];\n            var geometryType = packedGeometry[packedGeometryIndex++];\n            var offsetAttribute = packedGeometry[packedGeometryIndex++];\n            if (offsetAttribute === -1) {\n                offsetAttribute = undefined;\n            }\n\n            var boundingSphere;\n            var boundingSphereCV;\n\n            var validBoundingSphere = packedGeometry[packedGeometryIndex++] === 1.0;\n            if (validBoundingSphere) {\n                boundingSphere = BoundingSphere.unpack(packedGeometry, packedGeometryIndex);\n            }\n\n            packedGeometryIndex += BoundingSphere.packedLength;\n\n            var validBoundingSphereCV = packedGeometry[packedGeometryIndex++] === 1.0;\n            if (validBoundingSphereCV) {\n                boundingSphereCV = BoundingSphere.unpack(packedGeometry, packedGeometryIndex);\n            }\n\n            packedGeometryIndex += BoundingSphere.packedLength;\n\n            var length;\n            var values;\n            var componentsPerAttribute;\n            var attributes = new GeometryAttributes();\n            var numAttributes = packedGeometry[packedGeometryIndex++];\n            for (i = 0; i < numAttributes; i++) {\n                var name = stringTable[packedGeometry[packedGeometryIndex++]];\n                var componentDatatype = packedGeometry[packedGeometryIndex++];\n                componentsPerAttribute = packedGeometry[packedGeometryIndex++];\n                var normalize = packedGeometry[packedGeometryIndex++] !== 0;\n\n                length = packedGeometry[packedGeometryIndex++];\n                values = ComponentDatatype.createTypedArray(componentDatatype, length);\n                for (var valuesIndex = 0; valuesIndex < length; valuesIndex++) {\n                    values[valuesIndex] = packedGeometry[packedGeometryIndex++];\n                }\n\n                attributes[name] = new GeometryAttribute({\n                    componentDatatype : componentDatatype,\n                    componentsPerAttribute : componentsPerAttribute,\n                    normalize : normalize,\n                    values : values\n                });\n            }\n\n            var indices;\n            length = packedGeometry[packedGeometryIndex++];\n\n            if (length > 0) {\n                var numberOfVertices = values.length / componentsPerAttribute;\n                indices = IndexDatatype.createTypedArray(numberOfVertices, length);\n                for (i = 0; i < length; i++) {\n                    indices[i] = packedGeometry[packedGeometryIndex++];\n                }\n            }\n\n            result[resultIndex++] = new Geometry({\n                primitiveType : primitiveType,\n                geometryType : geometryType,\n                boundingSphere : boundingSphere,\n                boundingSphereCV : boundingSphereCV,\n                indices : indices,\n                attributes : attributes,\n                offsetAttribute: offsetAttribute\n            });\n        }\n\n        return result;\n    };\n\n    function packInstancesForCombine(instances, transferableObjects) {\n        var length = instances.length;\n        var packedData = new Float64Array(1 + (length * 19));\n        var count = 0;\n        packedData[count++] = length;\n        for (var i = 0; i < length; i++) {\n            var instance = instances[i];\n            Matrix4.pack(instance.modelMatrix, packedData, count);\n            count += Matrix4.packedLength;\n            if (defined(instance.attributes) && defined(instance.attributes.offset)) {\n                var values = instance.attributes.offset.value;\n                packedData[count] = values[0];\n                packedData[count + 1] = values[1];\n                packedData[count + 2] = values[2];\n            }\n            count += 3;\n        }\n        transferableObjects.push(packedData.buffer);\n\n        return packedData;\n    }\n\n    function unpackInstancesForCombine(data) {\n        var packedInstances = data;\n        var result = new Array(packedInstances[0]);\n        var count = 0;\n\n        var i = 1;\n        while (i < packedInstances.length) {\n            var modelMatrix = Matrix4.unpack(packedInstances, i);\n            var attributes;\n            i += Matrix4.packedLength;\n            if (defined(packedInstances[i])) {\n                attributes = {\n                    offset : new OffsetGeometryInstanceAttribute(packedInstances[i], packedInstances[i + 1], packedInstances[i + 2])\n                };\n            }\n            i += 3;\n\n            result[count++] = {\n                modelMatrix : modelMatrix,\n                attributes : attributes\n            };\n        }\n\n        return result;\n    }\n\n    /**\n     * @private\n     */\n    PrimitivePipeline.packCombineGeometryParameters = function(parameters, transferableObjects) {\n        var createGeometryResults = parameters.createGeometryResults;\n        var length = createGeometryResults.length;\n\n        for (var i = 0; i < length; i++) {\n            transferableObjects.push(createGeometryResults[i].packedData.buffer);\n        }\n\n        return {\n            createGeometryResults : parameters.createGeometryResults,\n            packedInstances : packInstancesForCombine(parameters.instances, transferableObjects),\n            ellipsoid : parameters.ellipsoid,\n            isGeographic : parameters.projection instanceof GeographicProjection,\n            elementIndexUintSupported : parameters.elementIndexUintSupported,\n            scene3DOnly : parameters.scene3DOnly,\n            vertexCacheOptimize : parameters.vertexCacheOptimize,\n            compressVertices : parameters.compressVertices,\n            modelMatrix : parameters.modelMatrix,\n            createPickOffsets : parameters.createPickOffsets\n        };\n    };\n\n    /**\n     * @private\n     */\n    PrimitivePipeline.unpackCombineGeometryParameters = function(packedParameters) {\n        var instances = unpackInstancesForCombine(packedParameters.packedInstances);\n        var createGeometryResults = packedParameters.createGeometryResults;\n        var length = createGeometryResults.length;\n        var instanceIndex = 0;\n\n        for (var resultIndex = 0; resultIndex < length; resultIndex++) {\n            var geometries = PrimitivePipeline.unpackCreateGeometryResults(createGeometryResults[resultIndex]);\n            var geometriesLength = geometries.length;\n            for (var geometryIndex = 0; geometryIndex < geometriesLength; geometryIndex++) {\n                var geometry = geometries[geometryIndex];\n                var instance = instances[instanceIndex];\n                instance.geometry = geometry;\n                ++instanceIndex;\n            }\n        }\n\n        var ellipsoid = Ellipsoid.clone(packedParameters.ellipsoid);\n        var projection = packedParameters.isGeographic ? new GeographicProjection(ellipsoid) : new WebMercatorProjection(ellipsoid);\n\n        return {\n            instances : instances,\n            ellipsoid : ellipsoid,\n            projection : projection,\n            elementIndexUintSupported : packedParameters.elementIndexUintSupported,\n            scene3DOnly : packedParameters.scene3DOnly,\n            vertexCacheOptimize : packedParameters.vertexCacheOptimize,\n            compressVertices : packedParameters.compressVertices,\n            modelMatrix : Matrix4.clone(packedParameters.modelMatrix),\n            createPickOffsets : packedParameters.createPickOffsets\n        };\n    };\n\n    function packBoundingSpheres(boundingSpheres) {\n        var length = boundingSpheres.length;\n        var bufferLength = 1 + (BoundingSphere.packedLength + 1) * length;\n        var buffer = new Float32Array(bufferLength);\n\n        var bufferIndex = 0;\n        buffer[bufferIndex++] = length;\n\n        for (var i = 0; i < length; ++i) {\n            var bs = boundingSpheres[i];\n            if (!defined(bs)) {\n                buffer[bufferIndex++] = 0.0;\n            } else {\n                buffer[bufferIndex++] = 1.0;\n                BoundingSphere.pack(boundingSpheres[i], buffer, bufferIndex);\n            }\n            bufferIndex += BoundingSphere.packedLength;\n        }\n\n        return buffer;\n    }\n\n    function unpackBoundingSpheres(buffer) {\n        var result = new Array(buffer[0]);\n        var count = 0;\n\n        var i = 1;\n        while (i < buffer.length) {\n            if (buffer[i++] === 1.0) {\n                result[count] = BoundingSphere.unpack(buffer, i);\n            }\n            ++count;\n            i += BoundingSphere.packedLength;\n        }\n\n        return result;\n    }\n\n    /**\n     * @private\n     */\n    PrimitivePipeline.packCombineGeometryResults = function(results, transferableObjects) {\n        if (defined(results.geometries)) {\n            transferGeometries(results.geometries, transferableObjects);\n        }\n\n        var packedBoundingSpheres = packBoundingSpheres(results.boundingSpheres);\n        var packedBoundingSpheresCV = packBoundingSpheres(results.boundingSpheresCV);\n        transferableObjects.push(packedBoundingSpheres.buffer, packedBoundingSpheresCV.buffer);\n\n        return {\n            geometries : results.geometries,\n            attributeLocations : results.attributeLocations,\n            modelMatrix : results.modelMatrix,\n            pickOffsets : results.pickOffsets,\n            offsetInstanceExtend: results.offsetInstanceExtend,\n            boundingSpheres : packedBoundingSpheres,\n            boundingSpheresCV : packedBoundingSpheresCV\n        };\n    };\n\n    /**\n     * @private\n     */\n    PrimitivePipeline.unpackCombineGeometryResults = function(packedResult) {\n        return {\n            geometries : packedResult.geometries,\n            attributeLocations : packedResult.attributeLocations,\n            modelMatrix : packedResult.modelMatrix,\n            pickOffsets : packedResult.pickOffsets,\n            offsetInstanceExtend: packedResult.offsetInstanceExtend,\n            boundingSpheres : unpackBoundingSpheres(packedResult.boundingSpheres),\n            boundingSpheresCV : unpackBoundingSpheres(packedResult.boundingSpheresCV)\n        };\n    };\nexport default PrimitivePipeline;\n"],"names":["defaultValue","ComponentDatatype","Check","defined","Matrix4","GeometryPipeline","GeometryAttribute","DeveloperError","BoundingSphere","GeometryAttributes","IndexDatatype","Geometry","GeographicProjection","Ellipsoid","WebMercatorProjection"],"mappings":"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"}