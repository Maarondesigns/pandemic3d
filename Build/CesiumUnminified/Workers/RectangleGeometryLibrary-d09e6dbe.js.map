{"version":3,"file":"RectangleGeometryLibrary-d09e6dbe.js","sources":["../../../../Source/Core/RectangleGeometryLibrary.js"],"sourcesContent":["import Cartesian3 from './Cartesian3.js';\nimport Cartographic from './Cartographic.js';\nimport defined from './defined.js';\nimport DeveloperError from './DeveloperError.js';\nimport GeographicProjection from './GeographicProjection.js';\nimport CesiumMath from './Math.js';\nimport Matrix2 from './Matrix2.js';\nimport Rectangle from './Rectangle.js';\n\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var sqrt = Math.sqrt;\n\n    /**\n     * @private\n     */\n    var RectangleGeometryLibrary = {};\n\n    /**\n     * @private\n     */\n    RectangleGeometryLibrary.computePosition = function(computedOptions, ellipsoid, computeST, row, col, position, st) {\n        var radiiSquared = ellipsoid.radiiSquared;\n        var nwCorner = computedOptions.nwCorner;\n        var rectangle = computedOptions.boundingRectangle;\n\n        var stLatitude = nwCorner.latitude - computedOptions.granYCos * row + col * computedOptions.granXSin;\n        var cosLatitude = cos(stLatitude);\n        var nZ = sin(stLatitude);\n        var kZ = radiiSquared.z * nZ;\n\n        var stLongitude = nwCorner.longitude + row * computedOptions.granYSin + col * computedOptions.granXCos;\n        var nX = cosLatitude * cos(stLongitude);\n        var nY = cosLatitude * sin(stLongitude);\n\n        var kX = radiiSquared.x * nX;\n        var kY = radiiSquared.y * nY;\n\n        var gamma = sqrt((kX * nX) + (kY * nY) + (kZ * nZ));\n\n        position.x = kX / gamma;\n        position.y = kY / gamma;\n        position.z = kZ / gamma;\n\n        if (computeST) {\n            var stNwCorner = computedOptions.stNwCorner;\n            if (defined(stNwCorner)) {\n                stLatitude = stNwCorner.latitude - computedOptions.stGranYCos * row + col * computedOptions.stGranXSin;\n                stLongitude = stNwCorner.longitude + row * computedOptions.stGranYSin + col * computedOptions.stGranXCos;\n\n                st.x = (stLongitude - computedOptions.stWest) * computedOptions.lonScalar;\n                st.y = (stLatitude - computedOptions.stSouth) * computedOptions.latScalar;\n            } else {\n                st.x = (stLongitude - rectangle.west) * computedOptions.lonScalar;\n                st.y = (stLatitude - rectangle.south) * computedOptions.latScalar;\n            }\n        }\n    };\n\n    var rotationMatrixScratch = new Matrix2();\n    var nwCartesian = new Cartesian3();\n    var centerScratch = new Cartographic();\n    var centerCartesian = new Cartesian3();\n    var proj = new GeographicProjection();\n\n    function getRotationOptions(nwCorner, rotation, granularityX, granularityY, center, width, height) {\n        var cosRotation = Math.cos(rotation);\n        var granYCos = granularityY * cosRotation;\n        var granXCos = granularityX * cosRotation;\n\n        var sinRotation = Math.sin(rotation);\n        var granYSin = granularityY * sinRotation;\n        var granXSin = granularityX * sinRotation;\n\n        nwCartesian = proj.project(nwCorner, nwCartesian);\n\n        nwCartesian = Cartesian3.subtract(nwCartesian, centerCartesian, nwCartesian);\n        var rotationMatrix = Matrix2.fromRotation(rotation, rotationMatrixScratch);\n        nwCartesian = Matrix2.multiplyByVector(rotationMatrix, nwCartesian, nwCartesian);\n        nwCartesian = Cartesian3.add(nwCartesian, centerCartesian, nwCartesian);\n        nwCorner = proj.unproject(nwCartesian, nwCorner);\n\n        width -= 1;\n        height -= 1;\n\n        var latitude = nwCorner.latitude;\n        var latitude0 = latitude + width * granXSin;\n        var latitude1 = latitude - granYCos * height;\n        var latitude2 = latitude - granYCos * height + width * granXSin;\n\n        var north = Math.max(latitude, latitude0, latitude1, latitude2);\n        var south = Math.min(latitude, latitude0, latitude1, latitude2);\n\n        var longitude = nwCorner.longitude;\n        var longitude0 = longitude + width * granXCos;\n        var longitude1 = longitude + height * granYSin;\n        var longitude2 = longitude + height * granYSin + width * granXCos;\n\n        var east = Math.max(longitude, longitude0, longitude1, longitude2);\n        var west = Math.min(longitude, longitude0, longitude1, longitude2);\n\n        return {\n            north: north,\n            south: south,\n            east: east,\n            west: west,\n            granYCos : granYCos,\n            granYSin : granYSin,\n            granXCos : granXCos,\n            granXSin : granXSin,\n            nwCorner : nwCorner\n        };\n    }\n\n    /**\n     * @private\n     */\n    RectangleGeometryLibrary.computeOptions = function(rectangle, granularity, rotation, stRotation, boundingRectangleScratch, nwCornerResult, stNwCornerResult) {\n        var east = rectangle.east;\n        var west = rectangle.west;\n        var north = rectangle.north;\n        var south = rectangle.south;\n\n        var northCap = false;\n        var southCap = false;\n\n        if (north === CesiumMath.PI_OVER_TWO) {\n            northCap = true;\n        }\n        if (south === -CesiumMath.PI_OVER_TWO) {\n            southCap = true;\n        }\n\n        var width;\n        var height;\n        var granularityX;\n        var granularityY;\n        var dx;\n        var dy = north - south;\n        if (west > east) {\n            dx = (CesiumMath.TWO_PI - west + east);\n        } else {\n            dx = east - west;\n        }\n\n        width = Math.ceil(dx / granularity) + 1;\n        height = Math.ceil(dy / granularity) + 1;\n        granularityX = dx / (width - 1);\n        granularityY = dy / (height - 1);\n\n        var nwCorner = Rectangle.northwest(rectangle, nwCornerResult);\n        var center = Rectangle.center(rectangle, centerScratch);\n        if (rotation !== 0 || stRotation !== 0) {\n            if (center.longitude < nwCorner.longitude) {\n                center.longitude += CesiumMath.TWO_PI;\n            }\n            centerCartesian = proj.project(center, centerCartesian);\n        }\n\n        var granYCos = granularityY;\n        var granXCos = granularityX;\n        var granYSin = 0.0;\n        var granXSin = 0.0;\n\n        var boundingRectangle = Rectangle.clone(rectangle, boundingRectangleScratch);\n\n        var computedOptions = {\n            granYCos : granYCos,\n            granYSin : granYSin,\n            granXCos : granXCos,\n            granXSin : granXSin,\n            nwCorner : nwCorner,\n            boundingRectangle : boundingRectangle,\n            width: width,\n            height: height,\n            northCap: northCap,\n            southCap: southCap\n        };\n\n        if (rotation !== 0) {\n            var rotationOptions = getRotationOptions(nwCorner, rotation, granularityX, granularityY, center, width, height);\n            north = rotationOptions.north;\n            south = rotationOptions.south;\n            east = rotationOptions.east;\n            west = rotationOptions.west;\n\n            //>>includeStart('debug', pragmas.debug);\n            if (north < -CesiumMath.PI_OVER_TWO || north > CesiumMath.PI_OVER_TWO ||\n                south < -CesiumMath.PI_OVER_TWO || south > CesiumMath.PI_OVER_TWO) {\n                throw new DeveloperError('Rotated rectangle is invalid.  It crosses over either the north or south pole.');\n            }\n            //>>includeEnd('debug')\n\n            computedOptions.granYCos = rotationOptions.granYCos;\n            computedOptions.granYSin = rotationOptions.granYSin;\n            computedOptions.granXCos = rotationOptions.granXCos;\n            computedOptions.granXSin = rotationOptions.granXSin;\n\n            boundingRectangle.north = north;\n            boundingRectangle.south = south;\n            boundingRectangle.east = east;\n            boundingRectangle.west = west;\n        }\n\n        if (stRotation !== 0) {\n            rotation = rotation - stRotation;\n            var stNwCorner = Rectangle.northwest(boundingRectangle, stNwCornerResult);\n\n            var stRotationOptions = getRotationOptions(stNwCorner, rotation, granularityX, granularityY, center, width, height);\n\n            computedOptions.stGranYCos =  stRotationOptions.granYCos;\n            computedOptions.stGranXCos = stRotationOptions.granXCos;\n            computedOptions.stGranYSin = stRotationOptions.granYSin;\n            computedOptions.stGranXSin = stRotationOptions.granXSin;\n            computedOptions.stNwCorner = stNwCorner;\n            computedOptions.stWest = stRotationOptions.west;\n            computedOptions.stSouth = stRotationOptions.south;\n        }\n\n        return computedOptions;\n    };\nexport default RectangleGeometryLibrary;\n"],"names":["defined","Matrix2","Cartesian3","Cartographic","GeographicProjection","CesiumMath","Rectangle","DeveloperError"],"mappings":"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"}