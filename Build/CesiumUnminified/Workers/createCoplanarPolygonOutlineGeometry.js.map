{"version":3,"file":"createCoplanarPolygonOutlineGeometry.js","sources":["../../../../Source/Core/CoplanarPolygonOutlineGeometry.js","../../../../Source/WorkersES6/createCoplanarPolygonOutlineGeometry.js"],"sourcesContent":["import arrayRemoveDuplicates from './arrayRemoveDuplicates.js';\nimport BoundingSphere from './BoundingSphere.js';\nimport Cartesian3 from './Cartesian3.js';\nimport Check from './Check.js';\nimport ComponentDatatype from './ComponentDatatype.js';\nimport CoplanarPolygonGeometryLibrary from './CoplanarPolygonGeometryLibrary.js';\nimport defaultValue from './defaultValue.js';\nimport defined from './defined.js';\nimport Geometry from './Geometry.js';\nimport GeometryAttribute from './GeometryAttribute.js';\nimport GeometryAttributes from './GeometryAttributes.js';\nimport GeometryInstance from './GeometryInstance.js';\nimport GeometryPipeline from './GeometryPipeline.js';\nimport IndexDatatype from './IndexDatatype.js';\nimport PolygonGeometryLibrary from './PolygonGeometryLibrary.js';\nimport PrimitiveType from './PrimitiveType.js';\n\n    function createGeometryFromPositions(positions){\n        var length = positions.length;\n        var flatPositions = new Float64Array(length * 3);\n        var indices = IndexDatatype.createTypedArray(length, length * 2);\n\n        var positionIndex = 0;\n        var index = 0;\n\n        for (var i = 0; i < length; i++) {\n            var position = positions[i];\n            flatPositions[positionIndex++] = position.x;\n            flatPositions[positionIndex++] = position.y;\n            flatPositions[positionIndex++] = position.z;\n\n            indices[index++] = i;\n            indices[index++] = (i + 1) % length;\n        }\n\n        var attributes = new GeometryAttributes({\n            position: new GeometryAttribute({\n                componentDatatype : ComponentDatatype.DOUBLE,\n                componentsPerAttribute : 3,\n                values : flatPositions\n            })\n        });\n\n        return new Geometry({\n            attributes : attributes,\n            indices : indices,\n            primitiveType : PrimitiveType.LINES\n        });\n    }\n\n    /**\n     * A description of the outline of a polygon composed of arbitrary coplanar positions.\n     *\n     * @alias CoplanarPolygonOutlineGeometry\n     * @constructor\n     *\n     * @param {Object} options Object with the following properties:\n     * @param {PolygonHierarchy} options.polygonHierarchy A polygon hierarchy that can include holes.\n     *\n     * @see CoplanarPolygonOutlineGeometry.createGeometry\n     *\n     * @example\n     * var polygonOutline = new Cesium.CoplanarPolygonOutlineGeometry({\n     *   positions : Cesium.Cartesian3.fromDegreesArrayHeights([\n     *      -90.0, 30.0, 0.0,\n     *      -90.0, 30.0, 1000.0,\n     *      -80.0, 30.0, 1000.0,\n     *      -80.0, 30.0, 0.0\n     *   ])\n     * });\n     * var geometry = Cesium.CoplanarPolygonOutlineGeometry.createGeometry(polygonOutline);\n     */\n    function CoplanarPolygonOutlineGeometry(options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n        var polygonHierarchy = options.polygonHierarchy;\n        //>>includeStart('debug', pragmas.debug);\n        Check.defined('options.polygonHierarchy', polygonHierarchy);\n        //>>includeEnd('debug');\n\n        this._polygonHierarchy = polygonHierarchy;\n        this._workerName = 'createCoplanarPolygonOutlineGeometry';\n\n        /**\n         * The number of elements used to pack the object into an array.\n         * @type {Number}\n         */\n        this.packedLength = PolygonGeometryLibrary.computeHierarchyPackedLength(polygonHierarchy) + 1;\n    }\n\n    /**\n     * A description of a coplanar polygon outline from an array of positions.\n     *\n     * @param {Object} options Object with the following properties:\n     * @param {Cartesian3[]} options.positions An array of positions that defined the corner points of the polygon.\n     * @returns {CoplanarPolygonOutlineGeometry}\n     */\n    CoplanarPolygonOutlineGeometry.fromPositions = function(options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n        //>>includeStart('debug', pragmas.debug);\n        Check.defined('options.positions', options.positions);\n        //>>includeEnd('debug');\n\n        var newOptions = {\n            polygonHierarchy : {\n                positions : options.positions\n            }\n        };\n        return new CoplanarPolygonOutlineGeometry(newOptions);\n    };\n\n    /**\n     * Stores the provided instance into the provided array.\n     *\n     * @param {CoplanarPolygonOutlineGeometry} value The value to pack.\n     * @param {Number[]} array The array to pack into.\n     * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n     *\n     * @returns {Number[]} The array that was packed into\n     */\n    CoplanarPolygonOutlineGeometry.pack = function(value, array, startingIndex) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.typeOf.object('value', value);\n        Check.defined('array', array);\n        //>>includeEnd('debug');\n\n        startingIndex = defaultValue(startingIndex, 0);\n\n        startingIndex = PolygonGeometryLibrary.packPolygonHierarchy(value._polygonHierarchy, array, startingIndex);\n\n        array[startingIndex] = value.packedLength;\n\n        return array;\n    };\n\n    var scratchOptions = {\n        polygonHierarchy : {}\n    };\n    /**\n     * Retrieves an instance from a packed array.\n     *\n     * @param {Number[]} array The packed array.\n     * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n     * @param {CoplanarPolygonOutlineGeometry} [result] The object into which to store the result.\n     * @returns {CoplanarPolygonOutlineGeometry} The modified result parameter or a new CoplanarPolygonOutlineGeometry instance if one was not provided.\n     */\n    CoplanarPolygonOutlineGeometry.unpack = function(array, startingIndex, result) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.defined('array', array);\n        //>>includeEnd('debug');\n\n        startingIndex = defaultValue(startingIndex, 0);\n\n        var polygonHierarchy = PolygonGeometryLibrary.unpackPolygonHierarchy(array, startingIndex);\n        startingIndex = polygonHierarchy.startingIndex;\n        delete polygonHierarchy.startingIndex;\n        var packedLength = array[startingIndex];\n\n        if (!defined(result)) {\n            result = new CoplanarPolygonOutlineGeometry(scratchOptions);\n        }\n\n        result._polygonHierarchy = polygonHierarchy;\n        result.packedLength = packedLength;\n\n        return result;\n    };\n\n    /**\n     * Computes the geometric representation of an arbitrary coplanar polygon, including its vertices, indices, and a bounding sphere.\n     *\n     * @param {CoplanarPolygonOutlineGeometry} polygonGeometry A description of the polygon.\n     * @returns {Geometry|undefined} The computed vertices and indices.\n     */\n    CoplanarPolygonOutlineGeometry.createGeometry = function(polygonGeometry) {\n        var polygonHierarchy = polygonGeometry._polygonHierarchy;\n\n        var outerPositions = polygonHierarchy.positions;\n        outerPositions = arrayRemoveDuplicates(outerPositions, Cartesian3.equalsEpsilon, true);\n        if (outerPositions.length < 3) {\n            return;\n        }\n        var isValid = CoplanarPolygonGeometryLibrary.validOutline(outerPositions);\n        if (!isValid) {\n            return undefined;\n        }\n\n        var polygons = PolygonGeometryLibrary.polygonOutlinesFromHierarchy(polygonHierarchy, false);\n\n        if (polygons.length === 0) {\n            return undefined;\n        }\n\n        var geometries = [];\n\n        for (var i = 0; i < polygons.length; i++) {\n            var geometryInstance = new GeometryInstance({\n                geometry : createGeometryFromPositions(polygons[i])\n            });\n            geometries.push(geometryInstance);\n        }\n\n        var geometry = GeometryPipeline.combineInstances(geometries)[0];\n        var boundingSphere = BoundingSphere.fromPoints(polygonHierarchy.positions);\n\n        return new Geometry({\n            attributes : geometry.attributes,\n            indices : geometry.indices,\n            primitiveType : geometry.primitiveType,\n            boundingSphere : boundingSphere\n        });\n    };\nexport default CoplanarPolygonOutlineGeometry;\n","import CoplanarPolygonOutlineGeometry from '../Core/CoplanarPolygonOutlineGeometry.js';\nimport defined from '../Core/defined.js';\nimport Ellipsoid from '../Core/Ellipsoid.js';\n\n    function createCoplanarPolygonOutlineGeometry(polygonGeometry, offset) {\n        if (defined(offset)) {\n            polygonGeometry = CoplanarPolygonOutlineGeometry.unpack(polygonGeometry, offset);\n        }\n        polygonGeometry._ellipsoid = Ellipsoid.clone(polygonGeometry._ellipsoid);\n        return CoplanarPolygonOutlineGeometry.createGeometry(polygonGeometry);\n    }\nexport default createCoplanarPolygonOutlineGeometry;\n"],"names":["IndexDatatype","GeometryAttributes","GeometryAttribute","ComponentDatatype","Geometry","PrimitiveType","defaultValue","Check","PolygonGeometryLibrary","defined","arrayRemoveDuplicates","Cartesian3","CoplanarPolygonGeometryLibrary","GeometryInstance","GeometryPipeline","BoundingSphere","Ellipsoid"],"mappings":"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"}