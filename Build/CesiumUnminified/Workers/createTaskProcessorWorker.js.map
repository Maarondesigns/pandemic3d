{"version":3,"file":"createTaskProcessorWorker.js","sources":["../../../../Source/Core/formatError.js","../../../../Source/WorkersES6/createTaskProcessorWorker.js"],"sourcesContent":["import defined from './defined.js';\n\n    /**\n     * Formats an error object into a String.  If available, uses name, message, and stack\n     * properties, otherwise, falls back on toString().\n     *\n     * @exports formatError\n     *\n     * @param {*} object The item to find in the array.\n     * @returns {String} A string containing the formatted error.\n     */\n    function formatError(object) {\n        var result;\n\n        var name = object.name;\n        var message = object.message;\n        if (defined(name) && defined(message)) {\n            result = name + ': ' + message;\n        } else {\n            result = object.toString();\n        }\n\n        var stack = object.stack;\n        if (defined(stack)) {\n            result += '\\n' + stack;\n        }\n\n        return result;\n    }\nexport default formatError;\n","import defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport formatError from '../Core/formatError.js';\nimport when from '../ThirdParty/when.js';\n\n    // createXXXGeometry functions may return Geometry or a Promise that resolves to Geometry\n    // if the function requires access to ApproximateTerrainHeights.\n    // For fully synchronous functions, just wrapping the function call in a `when` Promise doesn't\n    // handle errors correctly, hence try-catch\n    function callAndWrap(workerFunction, parameters, transferableObjects) {\n        var resultOrPromise;\n        try {\n            resultOrPromise = workerFunction(parameters, transferableObjects);\n            return resultOrPromise; // errors handled by Promise\n        } catch (e) {\n            return when.reject(e);\n        }\n    }\n\n    /**\n     * Creates an adapter function to allow a calculation function to operate as a Web Worker,\n     * paired with TaskProcessor, to receive tasks and return results.\n     *\n     * @exports createTaskProcessorWorker\n     *\n     * @param {createTaskProcessorWorker~WorkerFunction} workerFunction The calculation function,\n     *        which takes parameters and returns a result.\n     * @returns {createTaskProcessorWorker~TaskProcessorWorkerFunction} A function that adapts the\n     *          calculation function to work as a Web Worker onmessage listener with TaskProcessor.\n     *\n     *\n     * @example\n     * function doCalculation(parameters, transferableObjects) {\n     *   // calculate some result using the inputs in parameters\n     *   return result;\n     * }\n     *\n     * return Cesium.createTaskProcessorWorker(doCalculation);\n     * // the resulting function is compatible with TaskProcessor\n     *\n     * @see TaskProcessor\n     * @see {@link http://www.w3.org/TR/workers/|Web Workers}\n     * @see {@link http://www.w3.org/TR/html5/common-dom-interfaces.html#transferable-objects|Transferable objects}\n     */\n    function createTaskProcessorWorker(workerFunction) {\n        var postMessage;\n\n        return function(event) {\n            var data = event.data;\n\n            var transferableObjects = [];\n            var responseMessage = {\n                id : data.id,\n                result : undefined,\n                error : undefined\n            };\n\n            return when(callAndWrap(workerFunction, data.parameters, transferableObjects))\n                .then(function(result) {\n                    responseMessage.result = result;\n                })\n                .otherwise(function(e) {\n                    if (e instanceof Error) {\n                        // Errors can't be posted in a message, copy the properties\n                        responseMessage.error = {\n                            name : e.name,\n                            message : e.message,\n                            stack : e.stack\n                        };\n                    } else {\n                        responseMessage.error = e;\n                    }\n                })\n                .always(function() {\n                    if (!defined(postMessage)) {\n                        postMessage = defaultValue(self.webkitPostMessage, self.postMessage);\n                    }\n\n                    if (!data.canTransferArrayBuffer) {\n                        transferableObjects.length = 0;\n                    }\n\n                    try {\n                        postMessage(responseMessage, transferableObjects);\n                    } catch (e) {\n                        // something went wrong trying to post the message, post a simpler\n                        // error that we can be sure will be cloneable\n                        responseMessage.result = undefined;\n                        responseMessage.error = 'postMessage failed with error: ' + formatError(e) + '\\n  with responseMessage: ' + JSON.stringify(responseMessage);\n                        postMessage(responseMessage);\n                    }\n                });\n        };\n    }\n\n    /**\n     * A function that performs a calculation in a Web Worker.\n     * @callback createTaskProcessorWorker~WorkerFunction\n     *\n     * @param {Object} parameters Parameters to the calculation.\n     * @param {Array} transferableObjects An array that should be filled with references to objects inside\n     *        the result that should be transferred back to the main document instead of copied.\n     * @returns {Object} The result of the calculation.\n     *\n     * @example\n     * function calculate(parameters, transferableObjects) {\n     *   // perform whatever calculation is necessary.\n     *   var typedArray = new Float32Array(0);\n     *\n     *   // typed arrays are transferable\n     *   transferableObjects.push(typedArray)\n     *\n     *   return {\n     *      typedArray : typedArray\n     *   };\n     * }\n     */\n\n    /**\n     * A Web Worker message event handler function that handles the interaction with TaskProcessor,\n     * specifically, task ID management and posting a response message containing the result.\n     * @callback createTaskProcessorWorker~TaskProcessorWorkerFunction\n     *\n     * @param {Object} event The onmessage event object.\n     */\nexport default createTaskProcessorWorker;\n"],"names":["defined","when","defaultValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAEI;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,WAAW,CAAC,MAAM,EAAE;IACjC,QAAQ,IAAI,MAAM,CAAC;AACnB;IACA,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IAC/B,QAAQ,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IACrC,QAAQ,IAAIA,YAAO,CAAC,IAAI,CAAC,IAAIA,YAAO,CAAC,OAAO,CAAC,EAAE;IAC/C,YAAY,MAAM,GAAG,IAAI,GAAG,IAAI,GAAG,OAAO,CAAC;IAC3C,SAAS,MAAM;IACf,YAAY,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvC,SAAS;AACT;IACA,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IACjC,QAAQ,IAAIA,YAAO,CAAC,KAAK,CAAC,EAAE;IAC5B,YAAY,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC;IACnC,SAAS;AACT;IACA,QAAQ,OAAO,MAAM,CAAC;IACtB;;ICvBI;IACJ;IACA;IACA;IACA,IAAI,SAAS,WAAW,CAAC,cAAc,EAAE,UAAU,EAAE,mBAAmB,EAAE;IAC1E,QAAQ,IAAI,eAAe,CAAC;IAC5B,QAAQ,IAAI;IACZ,YAAY,eAAe,GAAG,cAAc,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC;IAC9E,YAAY,OAAO,eAAe,CAAC;IACnC,SAAS,CAAC,OAAO,CAAC,EAAE;IACpB,YAAY,OAAOC,SAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAClC,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,yBAAyB,CAAC,cAAc,EAAE;IACvD,QAAQ,IAAI,WAAW,CAAC;AACxB;IACA,QAAQ,OAAO,SAAS,KAAK,EAAE;IAC/B,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AAClC;IACA,YAAY,IAAI,mBAAmB,GAAG,EAAE,CAAC;IACzC,YAAY,IAAI,eAAe,GAAG;IAClC,gBAAgB,EAAE,GAAG,IAAI,CAAC,EAAE;IAC5B,gBAAgB,MAAM,GAAG,SAAS;IAClC,gBAAgB,KAAK,GAAG,SAAS;IACjC,aAAa,CAAC;AACd;IACA,YAAY,OAAOA,SAAI,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC;IAC1F,iBAAiB,IAAI,CAAC,SAAS,MAAM,EAAE;IACvC,oBAAoB,eAAe,CAAC,MAAM,GAAG,MAAM,CAAC;IACpD,iBAAiB,CAAC;IAClB,iBAAiB,SAAS,CAAC,SAAS,CAAC,EAAE;IACvC,oBAAoB,IAAI,CAAC,YAAY,KAAK,EAAE;IAC5C;IACA,wBAAwB,eAAe,CAAC,KAAK,GAAG;IAChD,4BAA4B,IAAI,GAAG,CAAC,CAAC,IAAI;IACzC,4BAA4B,OAAO,GAAG,CAAC,CAAC,OAAO;IAC/C,4BAA4B,KAAK,GAAG,CAAC,CAAC,KAAK;IAC3C,yBAAyB,CAAC;IAC1B,qBAAqB,MAAM;IAC3B,wBAAwB,eAAe,CAAC,KAAK,GAAG,CAAC,CAAC;IAClD,qBAAqB;IACrB,iBAAiB,CAAC;IAClB,iBAAiB,MAAM,CAAC,WAAW;IACnC,oBAAoB,IAAI,CAACD,YAAO,CAAC,WAAW,CAAC,EAAE;IAC/C,wBAAwB,WAAW,GAAGE,iBAAY,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7F,qBAAqB;AACrB;IACA,oBAAoB,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;IACtD,wBAAwB,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC;IACvD,qBAAqB;AACrB;IACA,oBAAoB,IAAI;IACxB,wBAAwB,WAAW,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;IAC1E,qBAAqB,CAAC,OAAO,CAAC,EAAE;IAChC;IACA;IACA,wBAAwB,eAAe,CAAC,MAAM,GAAG,SAAS,CAAC;IAC3D,wBAAwB,eAAe,CAAC,KAAK,GAAG,iCAAiC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,4BAA4B,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;IACpK,wBAAwB,WAAW,CAAC,eAAe,CAAC,CAAC;IACrD,qBAAqB;IACrB,iBAAiB,CAAC,CAAC;IACnB,SAAS,CAAC;IACV,KAAK;;;;;;;;"}