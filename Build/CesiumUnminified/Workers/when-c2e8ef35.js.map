{"version":3,"file":"when-c2e8ef35.js","sources":["../../../../Source/Core/defined.js","../../../../Source/Core/defaultValue.js","../../../../Source/ThirdParty/when.js"],"sourcesContent":["\n    /**\n     * @exports defined\n     *\n     * @param {*} value The object.\n     * @returns {Boolean} Returns true if the object is defined, returns false otherwise.\n     *\n     * @example\n     * if (Cesium.defined(positions)) {\n     *      doSomething();\n     * } else {\n     *      doSomethingElse();\n     * }\n     */\n    function defined(value) {\n        return value !== undefined && value !== null;\n    }\nexport default defined;\n","\n    /**\n     * Returns the first parameter if not undefined, otherwise the second parameter.\n     * Useful for setting a default value for a parameter.\n     *\n     * @exports defaultValue\n     *\n     * @param {*} a\n     * @param {*} b\n     * @returns {*} Returns the first parameter if not undefined, otherwise the second parameter.\n     *\n     * @example\n     * param = Cesium.defaultValue(param, 'default');\n     */\n    function defaultValue(a, b) {\n        if (a !== undefined && a !== null) {\n            return a;\n        }\n        return b;\n    }\n\n    /**\n     * A frozen empty object that can be used as the default value for options passed as\n     * an object literal.\n     * @type {Object}\n     */\n    defaultValue.EMPTY_OBJECT = Object.freeze({});\nexport default defaultValue;\n","/**\n  @license\n  when.js - https://github.com/cujojs/when\n\n  MIT License (c) copyright B Cavalier & J Hann\n\n * A lightweight CommonJS Promises/A and when() implementation\n * when is part of the cujo.js family of libraries (http://cujojs.com/)\n *\n * Licensed under the MIT License at:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @version 1.7.1\n */\n\n\tvar reduceArray, slice, undef;\n\n\t//\n\t// Public API\n\t//\n\n\twhen.defer     = defer;     // Create a deferred\n\twhen.resolve   = resolve;   // Create a resolved promise\n\twhen.reject    = reject;    // Create a rejected promise\n\n\twhen.join      = join;      // Join 2 or more promises\n\n\twhen.all       = all;       // Resolve a list of promises\n\twhen.map       = map;       // Array.map() for promises\n\twhen.reduce    = reduce;    // Array.reduce() for promises\n\n\twhen.any       = any;       // One-winner race\n\twhen.some      = some;      // Multi-winner race\n\n\twhen.chain     = chain;     // Make a promise trigger another resolver\n\n\twhen.isPromise = isPromise; // Determine if a thing is a promise\n\n\t/**\n\t * Register an observer for a promise or immediate value.\n\t *\n\t * @param {*} promiseOrValue\n\t * @param {function?} [onFulfilled] callback to be called when promiseOrValue is\n\t *   successfully fulfilled.  If promiseOrValue is an immediate value, callback\n\t *   will be invoked immediately.\n\t * @param {function?} [onRejected] callback to be called when promiseOrValue is\n\t *   rejected.\n\t * @param {function?} [onProgress] callback to be called when progress updates\n\t *   are issued for promiseOrValue.\n\t * @returns {Promise} a new {@link Promise} that will complete with the return\n\t *   value of callback or errback or the completion value of promiseOrValue if\n\t *   callback and/or errback is not supplied.\n\t */\n\tfunction when(promiseOrValue, onFulfilled, onRejected, onProgress) {\n\t\t// Get a trusted promise for the input promiseOrValue, and then\n\t\t// register promise handlers\n\t\treturn resolve(promiseOrValue).then(onFulfilled, onRejected, onProgress);\n\t}\n\n\t/**\n\t * Returns promiseOrValue if promiseOrValue is a {@link Promise}, a new Promise if\n\t * promiseOrValue is a foreign promise, or a new, already-fulfilled {@link Promise}\n\t * whose value is promiseOrValue if promiseOrValue is an immediate value.\n\t *\n\t * @param {*} promiseOrValue\n\t * @returns Guaranteed to return a trusted Promise.  If promiseOrValue is a when.js {@link Promise}\n\t *   returns promiseOrValue, otherwise, returns a new, already-resolved, when.js {@link Promise}\n\t *   whose resolution value is:\n\t *   * the resolution value of promiseOrValue if it's a foreign promise, or\n\t *   * promiseOrValue if it's a value\n\t */\n\tfunction resolve(promiseOrValue) {\n\t\tvar promise, deferred;\n\n\t\tif(promiseOrValue instanceof Promise) {\n\t\t\t// It's a when.js promise, so we trust it\n\t\t\tpromise = promiseOrValue;\n\n\t\t} else {\n\t\t\t// It's not a when.js promise. See if it's a foreign promise or a value.\n\t\t\tif(isPromise(promiseOrValue)) {\n\t\t\t\t// It's a thenable, but we don't know where it came from, so don't trust\n\t\t\t\t// its implementation entirely.  Introduce a trusted middleman when.js promise\n\t\t\t\tdeferred = defer();\n\n\t\t\t\t// IMPORTANT: This is the only place when.js should ever call .then() on an\n\t\t\t\t// untrusted promise. Don't expose the return value to the untrusted promise\n\t\t\t\tpromiseOrValue.then(\n\t\t\t\t\tfunction(value)  { deferred.resolve(value); },\n\t\t\t\t\tfunction(reason) { deferred.reject(reason); },\n\t\t\t\t\tfunction(update) { deferred.progress(update); }\n\t\t\t\t);\n\n\t\t\t\tpromise = deferred.promise;\n\n\t\t\t} else {\n\t\t\t\t// It's a value, not a promise.  Create a resolved promise for it.\n\t\t\t\tpromise = fulfilled(promiseOrValue);\n\t\t\t}\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Returns a rejected promise for the supplied promiseOrValue.  The returned\n\t * promise will be rejected with:\n\t * - promiseOrValue, if it is a value, or\n\t * - if promiseOrValue is a promise\n\t *   - promiseOrValue's value after it is fulfilled\n\t *   - promiseOrValue's reason after it is rejected\n\t * @param {*} promiseOrValue the rejected value of the returned {@link Promise}\n\t * @returns {Promise} rejected {@link Promise}\n\t */\n\tfunction reject(promiseOrValue) {\n\t\treturn when(promiseOrValue, rejected);\n\t}\n\n\t/**\n\t * Trusted Promise constructor.  A Promise created from this constructor is\n\t * a trusted when.js promise.  Any other duck-typed promise is considered\n\t * untrusted.\n\t * @constructor\n\t * @name Promise\n\t */\n\tfunction Promise(then) {\n\t\tthis.then = then;\n\t}\n\n\tPromise.prototype = {\n\t\t/**\n\t\t * Register a callback that will be called when a promise is\n\t\t * fulfilled or rejected.  Optionally also register a progress handler.\n\t\t * Shortcut for .then(onFulfilledOrRejected, onFulfilledOrRejected, onProgress)\n\t\t * @param {function?} [onFulfilledOrRejected]\n\t\t * @param {function?} [onProgress]\n\t\t * @returns {Promise}\n\t\t */\n\t\talways: function(onFulfilledOrRejected, onProgress) {\n\t\t\treturn this.then(onFulfilledOrRejected, onFulfilledOrRejected, onProgress);\n\t\t},\n\n\t\t/**\n\t\t * Register a rejection handler.  Shortcut for .then(undefined, onRejected)\n\t\t * @param {function?} onRejected\n\t\t * @returns {Promise}\n\t\t */\n\t\totherwise: function(onRejected) {\n\t\t\treturn this.then(undef, onRejected);\n\t\t},\n\n\t\t/**\n\t\t * Shortcut for .then(function() { return value; })\n\t\t * @param  {*} value\n\t\t * @returns {Promise} a promise that:\n\t\t *  - is fulfilled if value is not a promise, or\n\t\t *  - if value is a promise, will fulfill with its value, or reject\n\t\t *    with its reason.\n\t\t */\n\t\tyield: function(value) {\n\t\t\treturn this.then(function() {\n\t\t\t\treturn value;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Assumes that this promise will fulfill with an array, and arranges\n\t\t * for the onFulfilled to be called with the array as its argument list\n\t\t * i.e. onFulfilled.spread(undefined, array).\n\t\t * @param {function} onFulfilled function to receive spread arguments\n\t\t * @returns {Promise}\n\t\t */\n\t\tspread: function(onFulfilled) {\n\t\t\treturn this.then(function(array) {\n\t\t\t\t// array may contain promises, so resolve its contents.\n\t\t\t\treturn all(array, function(array) {\n\t\t\t\t\treturn onFulfilled.apply(undef, array);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Create an already-resolved promise for the supplied value\n\t * @private\n\t *\n\t * @param {*} value\n\t * @returns {Promise} fulfilled promise\n\t */\n\tfunction fulfilled(value) {\n\t\tvar p = new Promise(function(onFulfilled) {\n\t\t\t// TODO: Promises/A+ check typeof onFulfilled\n\t\t\ttry {\n\t\t\t\treturn resolve(onFulfilled ? onFulfilled(value) : value);\n\t\t\t} catch(e) {\n\t\t\t\treturn rejected(e);\n\t\t\t}\n\t\t});\n\n\t\treturn p;\n\t}\n\n\t/**\n\t * Create an already-rejected {@link Promise} with the supplied\n\t * rejection reason.\n\t * @private\n\t *\n\t * @param {*} reason\n\t * @returns {Promise} rejected promise\n\t */\n\tfunction rejected(reason) {\n\t\tvar p = new Promise(function(_, onRejected) {\n\t\t\t// TODO: Promises/A+ check typeof onRejected\n\t\t\ttry {\n\t\t\t\treturn onRejected ? resolve(onRejected(reason)) : rejected(reason);\n\t\t\t} catch(e) {\n\t\t\t\treturn rejected(e);\n\t\t\t}\n\t\t});\n\n\t\treturn p;\n\t}\n\n\t/**\n\t * Creates a new, Deferred with fully isolated resolver and promise parts,\n\t * either or both of which may be given out safely to consumers.\n\t * The Deferred itself has the full API: resolve, reject, progress, and\n\t * then. The resolver has resolve, reject, and progress.  The promise\n\t * only has then.\n\t *\n\t * @returns {Deferred}\n\t */\n\tfunction defer() {\n\t\tvar deferred, promise, handlers, progressHandlers,\n\t\t\t_then, _progress, _resolve;\n\n\t\t/**\n\t\t * The promise for the new deferred\n\t\t * @type {Promise}\n\t\t */\n\t\tpromise = new Promise(then);\n\n\t\t/**\n\t\t * The full Deferred object, with {@link Promise} and {@link Resolver} parts\n\t\t * @class Deferred\n\t\t * @name Deferred\n\t\t */\n\t\tdeferred = {\n\t\t\tthen:     then, // DEPRECATED: use deferred.promise.then\n\t\t\tresolve:  promiseResolve,\n\t\t\treject:   promiseReject,\n\t\t\t// TODO: Consider renaming progress() to notify()\n\t\t\tprogress: promiseProgress,\n\n\t\t\tpromise:  promise,\n\n\t\t\tresolver: {\n\t\t\t\tresolve:  promiseResolve,\n\t\t\t\treject:   promiseReject,\n\t\t\t\tprogress: promiseProgress\n\t\t\t}\n\t\t};\n\n\t\thandlers = [];\n\t\tprogressHandlers = [];\n\n\t\t/**\n\t\t * Pre-resolution then() that adds the supplied callback, errback, and progback\n\t\t * functions to the registered listeners\n\t\t * @private\n\t\t *\n\t\t * @param {function?} [onFulfilled] resolution handler\n\t\t * @param {function?} [onRejected] rejection handler\n\t\t * @param {function?} [onProgress] progress handler\n\t\t */\n\t\t_then = function(onFulfilled, onRejected, onProgress) {\n\t\t\t// TODO: Promises/A+ check typeof onFulfilled, onRejected, onProgress\n\t\t\tvar deferred, progressHandler;\n\n\t\t\tdeferred = defer();\n\n\t\t\tprogressHandler = typeof onProgress === 'function'\n\t\t\t\t? function(update) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Allow progress handler to transform progress event\n\t\t\t\t\t\tdeferred.progress(onProgress(update));\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t// Use caught value as progress\n\t\t\t\t\t\tdeferred.progress(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t: function(update) { deferred.progress(update); };\n\n\t\t\thandlers.push(function(promise) {\n\t\t\t\tpromise.then(onFulfilled, onRejected)\n\t\t\t\t\t.then(deferred.resolve, deferred.reject, progressHandler);\n\t\t\t});\n\n\t\t\tprogressHandlers.push(progressHandler);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t/**\n\t\t * Issue a progress event, notifying all progress listeners\n\t\t * @private\n\t\t * @param {*} update progress event payload to pass to all listeners\n\t\t */\n\t\t_progress = function(update) {\n\t\t\tprocessQueue(progressHandlers, update);\n\t\t\treturn update;\n\t\t};\n\n\t\t/**\n\t\t * Transition from pre-resolution state to post-resolution state, notifying\n\t\t * all listeners of the resolution or rejection\n\t\t * @private\n\t\t * @param {*} value the value of this deferred\n\t\t */\n\t\t_resolve = function(value) {\n\t\t\tvalue = resolve(value);\n\n\t\t\t// Replace _then with one that directly notifies with the result.\n\t\t\t_then = value.then;\n\t\t\t// Replace _resolve so that this Deferred can only be resolved once\n\t\t\t_resolve = resolve;\n\t\t\t// Make _progress a noop, to disallow progress for the resolved promise.\n\t\t\t_progress = noop;\n\n\t\t\t// Notify handlers\n\t\t\tprocessQueue(handlers, value);\n\n\t\t\t// Free progressHandlers array since we'll never issue progress events\n\t\t\tprogressHandlers = handlers = undef;\n\n\t\t\treturn value;\n\t\t};\n\n\t\treturn deferred;\n\n\t\t/**\n\t\t * Wrapper to allow _then to be replaced safely\n\t\t * @param {function?} [onFulfilled] resolution handler\n\t\t * @param {function?} [onRejected] rejection handler\n\t\t * @param {function?} [onProgress] progress handler\n\t\t * @returns {Promise} new promise\n\t\t */\n\t\tfunction then(onFulfilled, onRejected, onProgress) {\n\t\t\t// TODO: Promises/A+ check typeof onFulfilled, onRejected, onProgress\n\t\t\treturn _then(onFulfilled, onRejected, onProgress);\n\t\t}\n\n\t\t/**\n\t\t * Wrapper to allow _resolve to be replaced\n\t\t */\n\t\tfunction promiseResolve(val) {\n\t\t\treturn _resolve(val);\n\t\t}\n\n\t\t/**\n\t\t * Wrapper to allow _reject to be replaced\n\t\t */\n\t\tfunction promiseReject(err) {\n\t\t\treturn _resolve(rejected(err));\n\t\t}\n\n\t\t/**\n\t\t * Wrapper to allow _progress to be replaced\n\t\t */\n\t\tfunction promiseProgress(update) {\n\t\t\treturn _progress(update);\n\t\t}\n\t}\n\n\t/**\n\t * Determines if promiseOrValue is a promise or not.  Uses the feature\n\t * test from http://wiki.commonjs.org/wiki/Promises/A to determine if\n\t * promiseOrValue is a promise.\n\t *\n\t * @param {*} promiseOrValue anything\n\t * @returns {boolean} true if promiseOrValue is a {@link Promise}\n\t */\n\tfunction isPromise(promiseOrValue) {\n\t\treturn promiseOrValue && typeof promiseOrValue.then === 'function';\n\t}\n\n\t/**\n\t * Initiates a competitive race, returning a promise that will resolve when\n\t * howMany of the supplied promisesOrValues have resolved, or will reject when\n\t * it becomes impossible for howMany to resolve, for example, when\n\t * (promisesOrValues.length - howMany) + 1 input promises reject.\n\t *\n\t * @param {Array} promisesOrValues array of anything, may contain a mix\n\t *      of promises and values\n\t * @param howMany {number} number of promisesOrValues to resolve\n\t * @param {function?} [onFulfilled] resolution handler\n\t * @param {function?} [onRejected] rejection handler\n\t * @param {function?} [onProgress] progress handler\n\t * @returns {Promise} promise that will resolve to an array of howMany values that\n\t * resolved first, or will reject with an array of (promisesOrValues.length - howMany) + 1\n\t * rejection reasons.\n\t */\n\tfunction some(promisesOrValues, howMany, onFulfilled, onRejected, onProgress) {\n\n\t\tcheckCallbacks(2, arguments);\n\n\t\treturn when(promisesOrValues, function(promisesOrValues) {\n\n\t\t\tvar toResolve, toReject, values, reasons, deferred, fulfillOne, rejectOne, progress, len, i;\n\n\t\t\tlen = promisesOrValues.length >>> 0;\n\n\t\t\ttoResolve = Math.max(0, Math.min(howMany, len));\n\t\t\tvalues = [];\n\n\t\t\ttoReject = (len - toResolve) + 1;\n\t\t\treasons = [];\n\n\t\t\tdeferred = defer();\n\n\t\t\t// No items in the input, resolve immediately\n\t\t\tif (!toResolve) {\n\t\t\t\tdeferred.resolve(values);\n\n\t\t\t} else {\n\t\t\t\tprogress = deferred.progress;\n\n\t\t\t\trejectOne = function(reason) {\n\t\t\t\t\treasons.push(reason);\n\t\t\t\t\tif(!--toReject) {\n\t\t\t\t\t\tfulfillOne = rejectOne = noop;\n\t\t\t\t\t\tdeferred.reject(reasons);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfulfillOne = function(val) {\n\t\t\t\t\t// This orders the values based on promise resolution order\n\t\t\t\t\t// Another strategy would be to use the original position of\n\t\t\t\t\t// the corresponding promise.\n\t\t\t\t\tvalues.push(val);\n\n\t\t\t\t\tif (!--toResolve) {\n\t\t\t\t\t\tfulfillOne = rejectOne = noop;\n\t\t\t\t\t\tdeferred.resolve(values);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfor(i = 0; i < len; ++i) {\n\t\t\t\t\tif(i in promisesOrValues) {\n\t\t\t\t\t\twhen(promisesOrValues[i], fulfiller, rejecter, progress);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn deferred.then(onFulfilled, onRejected, onProgress);\n\n\t\t\tfunction rejecter(reason) {\n\t\t\t\trejectOne(reason);\n\t\t\t}\n\n\t\t\tfunction fulfiller(val) {\n\t\t\t\tfulfillOne(val);\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Initiates a competitive race, returning a promise that will resolve when\n\t * any one of the supplied promisesOrValues has resolved or will reject when\n\t * *all* promisesOrValues have rejected.\n\t *\n\t * @param {Array|Promise} promisesOrValues array of anything, may contain a mix\n\t *      of {@link Promise}s and values\n\t * @param {function?} [onFulfilled] resolution handler\n\t * @param {function?} [onRejected] rejection handler\n\t * @param {function?} [onProgress] progress handler\n\t * @returns {Promise} promise that will resolve to the value that resolved first, or\n\t * will reject with an array of all rejected inputs.\n\t */\n\tfunction any(promisesOrValues, onFulfilled, onRejected, onProgress) {\n\n\t\tfunction unwrapSingleResult(val) {\n\t\t\treturn onFulfilled ? onFulfilled(val[0]) : val[0];\n\t\t}\n\n\t\treturn some(promisesOrValues, 1, unwrapSingleResult, onRejected, onProgress);\n\t}\n\n\t/**\n\t * Return a promise that will resolve only once all the supplied promisesOrValues\n\t * have resolved. The resolution value of the returned promise will be an array\n\t * containing the resolution values of each of the promisesOrValues.\n\t * @memberOf when\n\t *\n\t * @param {Array|Promise} promisesOrValues array of anything, may contain a mix\n\t *      of {@link Promise}s and values\n\t * @param {function?} [onFulfilled] resolution handler\n\t * @param {function?} [onRejected] rejection handler\n\t * @param {function?} [onProgress] progress handler\n\t * @returns {Promise}\n\t */\n\tfunction all(promisesOrValues, onFulfilled, onRejected, onProgress) {\n\t\tcheckCallbacks(1, arguments);\n\t\treturn map(promisesOrValues, identity).then(onFulfilled, onRejected, onProgress);\n\t}\n\n\t/**\n\t * Joins multiple promises into a single returned promise.\n\t * @returns {Promise} a promise that will fulfill when *all* the input promises\n\t * have fulfilled, or will reject when *any one* of the input promises rejects.\n\t */\n\tfunction join(/* ...promises */) {\n\t\treturn map(arguments, identity);\n\t}\n\n\t/**\n\t * Traditional map function, similar to `Array.prototype.map()`, but allows\n\t * input to contain {@link Promise}s and/or values, and mapFunc may return\n\t * either a value or a {@link Promise}\n\t *\n\t * @param {Array|Promise} promise array of anything, may contain a mix\n\t *      of {@link Promise}s and values\n\t * @param {function} mapFunc mapping function mapFunc(value) which may return\n\t *      either a {@link Promise} or value\n\t * @returns {Promise} a {@link Promise} that will resolve to an array containing\n\t *      the mapped output values.\n\t */\n\tfunction map(promise, mapFunc) {\n\t\treturn when(promise, function(array) {\n\t\t\tvar results, len, toResolve, resolve, i, d;\n\n\t\t\t// Since we know the resulting length, we can preallocate the results\n\t\t\t// array to avoid array expansions.\n\t\t\ttoResolve = len = array.length >>> 0;\n\t\t\tresults = [];\n\t\t\td = defer();\n\n\t\t\tif(!toResolve) {\n\t\t\t\td.resolve(results);\n\t\t\t} else {\n\n\t\t\t\tresolve = function resolveOne(item, i) {\n\t\t\t\t\twhen(item, mapFunc).then(function(mapped) {\n\t\t\t\t\t\tresults[i] = mapped;\n\n\t\t\t\t\t\tif(!--toResolve) {\n\t\t\t\t\t\t\td.resolve(results);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, d.reject);\n\t\t\t\t};\n\n\t\t\t\t// Since mapFunc may be async, get all invocations of it into flight\n\t\t\t\tfor(i = 0; i < len; i++) {\n\t\t\t\t\tif(i in array) {\n\t\t\t\t\t\tresolve(array[i], i);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t--toResolve;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn d.promise;\n\n\t\t});\n\t}\n\n\t/**\n\t * Traditional reduce function, similar to `Array.prototype.reduce()`, but\n\t * input may contain promises and/or values, and reduceFunc\n\t * may return either a value or a promise, *and* initialValue may\n\t * be a promise for the starting value.\n\t *\n\t * @param {Array|Promise} promise array or promise for an array of anything,\n\t *      may contain a mix of promises and values.\n\t * @param {function} reduceFunc reduce function reduce(currentValue, nextValue, index, total),\n\t *      where total is the total number of items being reduced, and will be the same\n\t *      in each call to reduceFunc.\n\t * @returns {Promise} that will resolve to the final reduced value\n\t */\n\tfunction reduce(promise, reduceFunc /*, initialValue */) {\n\t\tvar args = slice.call(arguments, 1);\n\n\t\treturn when(promise, function(array) {\n\t\t\tvar total;\n\n\t\t\ttotal = array.length;\n\n\t\t\t// Wrap the supplied reduceFunc with one that handles promises and then\n\t\t\t// delegates to the supplied.\n\t\t\targs[0] = function (current, val, i) {\n\t\t\t\treturn when(current, function (c) {\n\t\t\t\t\treturn when(val, function (value) {\n\t\t\t\t\t\treturn reduceFunc(c, value, i, total);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn reduceArray.apply(array, args);\n\t\t});\n\t}\n\n\t/**\n\t * Ensure that resolution of promiseOrValue will trigger resolver with the\n\t * value or reason of promiseOrValue, or instead with resolveValue if it is provided.\n\t *\n\t * @param promiseOrValue\n\t * @param {Object} resolver\n\t * @param {function} resolver.resolve\n\t * @param {function} resolver.reject\n\t * @param {*} [resolveValue]\n\t * @returns {Promise}\n\t */\n\tfunction chain(promiseOrValue, resolver, resolveValue) {\n\t\tvar useResolveValue = arguments.length > 2;\n\n\t\treturn when(promiseOrValue,\n\t\t\tfunction(val) {\n\t\t\t\tval = useResolveValue ? resolveValue : val;\n\t\t\t\tresolver.resolve(val);\n\t\t\t\treturn val;\n\t\t\t},\n\t\t\tfunction(reason) {\n\t\t\t\tresolver.reject(reason);\n\t\t\t\treturn rejected(reason);\n\t\t\t},\n\t\t\tresolver.progress\n\t\t);\n\t}\n\n\t//\n\t// Utility functions\n\t//\n\n\t/**\n\t * Apply all functions in queue to value\n\t * @param {Array} queue array of functions to execute\n\t * @param {*} value argument passed to each function\n\t */\n\tfunction processQueue(queue, value) {\n\t\tvar handler, i = 0;\n\n\t\twhile (handler = queue[i++]) {\n\t\t\thandler(value);\n\t\t}\n\t}\n\n\t/**\n\t * Helper that checks arrayOfCallbacks to ensure that each element is either\n\t * a function, or null or undefined.\n\t * @private\n\t * @param {number} start index at which to start checking items in arrayOfCallbacks\n\t * @param {Array} arrayOfCallbacks array to check\n\t * @throws {Error} if any element of arrayOfCallbacks is something other than\n\t * a functions, null, or undefined.\n\t */\n\tfunction checkCallbacks(start, arrayOfCallbacks) {\n\t\t// TODO: Promises/A+ update type checking and docs\n\t\tvar arg, i = arrayOfCallbacks.length;\n\n\t\twhile(i > start) {\n\t\t\targ = arrayOfCallbacks[--i];\n\n\t\t\tif (arg != null && typeof arg != 'function') {\n\t\t\t\tthrow new Error('arg '+i+' must be a function');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * No-Op function used in method replacement\n\t * @private\n\t */\n\tfunction noop() {}\n\n\tslice = [].slice;\n\n\t// ES5 reduce implementation if native not available\n\t// See: http://es5.github.com/#x15.4.4.21 as there are many\n\t// specifics and edge cases.\n\treduceArray = [].reduce ||\n\t\tfunction(reduceFunc /*, initialValue */) {\n\t\t\t/*jshint maxcomplexity: 7*/\n\n\t\t\t// ES5 dictates that reduce.length === 1\n\n\t\t\t// This implementation deviates from ES5 spec in the following ways:\n\t\t\t// 1. It does not check if reduceFunc is a Callable\n\n\t\t\tvar arr, args, reduced, len, i;\n\n\t\t\ti = 0;\n\t\t\t// This generates a jshint warning, despite being valid\n\t\t\t// \"Missing 'new' prefix when invoking a constructor.\"\n\t\t\t// See https://github.com/jshint/jshint/issues/392\n\t\t\tarr = Object(this);\n\t\t\tlen = arr.length >>> 0;\n\t\t\targs = arguments;\n\n\t\t\t// If no initialValue, use first item of array (we know length !== 0 here)\n\t\t\t// and adjust i to start at second item\n\t\t\tif(args.length <= 1) {\n\t\t\t\t// Skip to the first real element in the array\n\t\t\t\tfor(;;) {\n\t\t\t\t\tif(i in arr) {\n\t\t\t\t\t\treduced = arr[i++];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If we reached the end of the array without finding any real\n\t\t\t\t\t// elements, it's a TypeError\n\t\t\t\t\tif(++i >= len) {\n\t\t\t\t\t\tthrow new TypeError();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If initialValue provided, use it\n\t\t\t\treduced = args[1];\n\t\t\t}\n\n\t\t\t// Do the actual reduce\n\t\t\tfor(;i < len; ++i) {\n\t\t\t\t// Skip holes\n\t\t\t\tif(i in arr) {\n\t\t\t\t\treduced = reduceFunc(reduced, arr[i], i, arr);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn reduced;\n\t\t};\n\n\tfunction identity(x) {\n\t\treturn x;\n\t}\n\nexport default when;\n"],"names":[],"mappings":"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"}