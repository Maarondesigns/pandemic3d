{"version":3,"file":"upsampleQuantizedTerrainMesh.js","sources":["../../../../Source/Core/Intersections2D.js","../../../../Source/WorkersES6/upsampleQuantizedTerrainMesh.js"],"sourcesContent":["import Cartesian2 from './Cartesian2.js';\nimport Cartesian3 from './Cartesian3.js';\nimport Check from './Check.js';\nimport defined from './defined.js';\nimport DeveloperError from './DeveloperError.js';\n\n    /**\n     * Contains functions for operating on 2D triangles.\n     *\n     * @exports Intersections2D\n     */\n    var Intersections2D = {};\n\n    /**\n     * Splits a 2D triangle at given axis-aligned threshold value and returns the resulting\n     * polygon on a given side of the threshold.  The resulting polygon may have 0, 1, 2,\n     * 3, or 4 vertices.\n     *\n     * @param {Number} threshold The threshold coordinate value at which to clip the triangle.\n     * @param {Boolean} keepAbove true to keep the portion of the triangle above the threshold, or false\n     *                            to keep the portion below.\n     * @param {Number} u0 The coordinate of the first vertex in the triangle, in counter-clockwise order.\n     * @param {Number} u1 The coordinate of the second vertex in the triangle, in counter-clockwise order.\n     * @param {Number} u2 The coordinate of the third vertex in the triangle, in counter-clockwise order.\n     * @param {Number[]} [result] The array into which to copy the result.  If this parameter is not supplied,\n     *                            a new array is constructed and returned.\n     * @returns {Number[]} The polygon that results after the clip, specified as a list of\n     *                     vertices.  The vertices are specified in counter-clockwise order.\n     *                     Each vertex is either an index from the existing list (identified as\n     *                     a 0, 1, or 2) or -1 indicating a new vertex not in the original triangle.\n     *                     For new vertices, the -1 is followed by three additional numbers: the\n     *                     index of each of the two original vertices forming the line segment that\n     *                     the new vertex lies on, and the fraction of the distance from the first\n     *                     vertex to the second one.\n     *\n     * @example\n     * var result = Cesium.Intersections2D.clipTriangleAtAxisAlignedThreshold(0.5, false, 0.2, 0.6, 0.4);\n     * // result === [2, 0, -1, 1, 0, 0.25, -1, 1, 2, 0.5]\n     */\n    Intersections2D.clipTriangleAtAxisAlignedThreshold = function(threshold, keepAbove, u0, u1, u2, result) {\n        //>>includeStart('debug', pragmas.debug);\n        if (!defined(threshold)) {\n            throw new DeveloperError('threshold is required.');\n        }\n        if (!defined(keepAbove)) {\n            throw new DeveloperError('keepAbove is required.');\n        }\n        if (!defined(u0)) {\n            throw new DeveloperError('u0 is required.');\n        }\n        if (!defined(u1)) {\n            throw new DeveloperError('u1 is required.');\n        }\n        if (!defined(u2)) {\n            throw new DeveloperError('u2 is required.');\n        }\n        //>>includeEnd('debug');\n\n        if (!defined(result)) {\n            result = [];\n        } else {\n            result.length = 0;\n        }\n\n        var u0Behind;\n        var u1Behind;\n        var u2Behind;\n        if (keepAbove) {\n            u0Behind = u0 < threshold;\n            u1Behind = u1 < threshold;\n            u2Behind = u2 < threshold;\n        } else {\n            u0Behind = u0 > threshold;\n            u1Behind = u1 > threshold;\n            u2Behind = u2 > threshold;\n        }\n\n        var numBehind = u0Behind + u1Behind + u2Behind;\n\n        var u01Ratio;\n        var u02Ratio;\n        var u12Ratio;\n        var u10Ratio;\n        var u20Ratio;\n        var u21Ratio;\n\n        if (numBehind === 1) {\n            if (u0Behind) {\n                u01Ratio = (threshold - u0) / (u1 - u0);\n                u02Ratio = (threshold - u0) / (u2 - u0);\n\n                result.push(1);\n\n                result.push(2);\n\n                if (u02Ratio !== 1.0) {\n                    result.push(-1);\n                    result.push(0);\n                    result.push(2);\n                    result.push(u02Ratio);\n                }\n\n                if (u01Ratio !== 1.0) {\n                    result.push(-1);\n                    result.push(0);\n                    result.push(1);\n                    result.push(u01Ratio);\n                }\n            } else if (u1Behind) {\n                u12Ratio = (threshold - u1) / (u2 - u1);\n                u10Ratio = (threshold - u1) / (u0 - u1);\n\n                result.push(2);\n\n                result.push(0);\n\n                if (u10Ratio !== 1.0) {\n                    result.push(-1);\n                    result.push(1);\n                    result.push(0);\n                    result.push(u10Ratio);\n                }\n\n                if (u12Ratio !== 1.0) {\n                    result.push(-1);\n                    result.push(1);\n                    result.push(2);\n                    result.push(u12Ratio);\n                }\n            } else if (u2Behind) {\n                u20Ratio = (threshold - u2) / (u0 - u2);\n                u21Ratio = (threshold - u2) / (u1 - u2);\n\n                result.push(0);\n\n                result.push(1);\n\n                if (u21Ratio !== 1.0) {\n                    result.push(-1);\n                    result.push(2);\n                    result.push(1);\n                    result.push(u21Ratio);\n                }\n\n                if (u20Ratio !== 1.0) {\n                    result.push(-1);\n                    result.push(2);\n                    result.push(0);\n                    result.push(u20Ratio);\n                }\n            }\n        } else if (numBehind === 2) {\n            if (!u0Behind && u0 !== threshold) {\n                u10Ratio = (threshold - u1) / (u0 - u1);\n                u20Ratio = (threshold - u2) / (u0 - u2);\n\n                result.push(0);\n\n                result.push(-1);\n                result.push(1);\n                result.push(0);\n                result.push(u10Ratio);\n\n                result.push(-1);\n                result.push(2);\n                result.push(0);\n                result.push(u20Ratio);\n            } else if (!u1Behind && u1 !== threshold) {\n                u21Ratio = (threshold - u2) / (u1 - u2);\n                u01Ratio = (threshold - u0) / (u1 - u0);\n\n                result.push(1);\n\n                result.push(-1);\n                result.push(2);\n                result.push(1);\n                result.push(u21Ratio);\n\n                result.push(-1);\n                result.push(0);\n                result.push(1);\n                result.push(u01Ratio);\n            } else if (!u2Behind && u2 !== threshold) {\n                u02Ratio = (threshold - u0) / (u2 - u0);\n                u12Ratio = (threshold - u1) / (u2 - u1);\n\n                result.push(2);\n\n                result.push(-1);\n                result.push(0);\n                result.push(2);\n                result.push(u02Ratio);\n\n                result.push(-1);\n                result.push(1);\n                result.push(2);\n                result.push(u12Ratio);\n            }\n        } else if (numBehind !== 3) {\n            // Completely in front of threshold\n            result.push(0);\n            result.push(1);\n            result.push(2);\n        }\n        // else Completely behind threshold\n\n        return result;\n    };\n\n    /**\n     * Compute the barycentric coordinates of a 2D position within a 2D triangle.\n     *\n     * @param {Number} x The x coordinate of the position for which to find the barycentric coordinates.\n     * @param {Number} y The y coordinate of the position for which to find the barycentric coordinates.\n     * @param {Number} x1 The x coordinate of the triangle's first vertex.\n     * @param {Number} y1 The y coordinate of the triangle's first vertex.\n     * @param {Number} x2 The x coordinate of the triangle's second vertex.\n     * @param {Number} y2 The y coordinate of the triangle's second vertex.\n     * @param {Number} x3 The x coordinate of the triangle's third vertex.\n     * @param {Number} y3 The y coordinate of the triangle's third vertex.\n     * @param {Cartesian3} [result] The instance into to which to copy the result.  If this parameter\n     *                     is undefined, a new instance is created and returned.\n     * @returns {Cartesian3} The barycentric coordinates of the position within the triangle.\n     *\n     * @example\n     * var result = Cesium.Intersections2D.computeBarycentricCoordinates(0.0, 0.0, 0.0, 1.0, -1, -0.5, 1, -0.5);\n     * // result === new Cesium.Cartesian3(1.0 / 3.0, 1.0 / 3.0, 1.0 / 3.0);\n     */\n    Intersections2D.computeBarycentricCoordinates = function(x, y, x1, y1, x2, y2, x3, y3, result) {\n        //>>includeStart('debug', pragmas.debug);\n        if (!defined(x)) {\n            throw new DeveloperError('x is required.');\n        }\n        if (!defined(y)) {\n            throw new DeveloperError('y is required.');\n        }\n        if (!defined(x1)) {\n            throw new DeveloperError('x1 is required.');\n        }\n        if (!defined(y1)) {\n            throw new DeveloperError('y1 is required.');\n        }\n        if (!defined(x2)) {\n            throw new DeveloperError('x2 is required.');\n        }\n        if (!defined(y2)) {\n            throw new DeveloperError('y2 is required.');\n        }\n        if (!defined(x3)) {\n            throw new DeveloperError('x3 is required.');\n        }\n        if (!defined(y3)) {\n            throw new DeveloperError('y3 is required.');\n        }\n        //>>includeEnd('debug');\n\n        var x1mx3 = x1 - x3;\n        var x3mx2 = x3 - x2;\n        var y2my3 = y2 - y3;\n        var y1my3 = y1 - y3;\n        var inverseDeterminant = 1.0 / (y2my3 * x1mx3 + x3mx2 * y1my3);\n        var ymy3 = y - y3;\n        var xmx3 = x - x3;\n        var l1 = (y2my3 * xmx3 + x3mx2 * ymy3) * inverseDeterminant;\n        var l2 = (-y1my3 * xmx3 + x1mx3 * ymy3) * inverseDeterminant;\n        var l3 = 1.0 - l1 - l2;\n\n        if (defined(result)) {\n            result.x = l1;\n            result.y = l2;\n            result.z = l3;\n            return result;\n        }\n        return new Cartesian3(l1, l2, l3);\n    };\n\n    /**\n     * Compute the intersection between 2 line segments\n     *\n     * @param {Number} x00 The x coordinate of the first line's first vertex.\n     * @param {Number} y00 The y coordinate of the first line's first vertex.\n     * @param {Number} x01 The x coordinate of the first line's second vertex.\n     * @param {Number} y01 The y coordinate of the first line's second vertex.\n     * @param {Number} x10 The x coordinate of the second line's first vertex.\n     * @param {Number} y10 The y coordinate of the second line's first vertex.\n     * @param {Number} x11 The x coordinate of the second line's second vertex.\n     * @param {Number} y11 The y coordinate of the second line's second vertex.\n     * @param {Cartesian2} [result] The instance into to which to copy the result. If this parameter\n     *                     is undefined, a new instance is created and returned.\n     * @returns {Cartesian2} The intersection point, undefined if there is no intersection point or lines are coincident.\n     *\n     * @example\n     * var result = Cesium.Intersections2D.computeLineSegmentLineSegmentIntersection(0.0, 0.0, 0.0, 2.0, -1, 1, 1, 1);\n     * // result === new Cesium.Cartesian2(0.0, 1.0);\n     */\n    Intersections2D.computeLineSegmentLineSegmentIntersection = function(x00, y00, x01, y01, x10, y10, x11, y11, result) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.typeOf.number('x00', x00);\n        Check.typeOf.number('y00', y00);\n        Check.typeOf.number('x01', x01);\n        Check.typeOf.number('y01', y01);\n        Check.typeOf.number('x10', x10);\n        Check.typeOf.number('y10', y10);\n        Check.typeOf.number('x11', x11);\n        Check.typeOf.number('y11', y11);\n        //>>includeEnd('debug');\n\n        var numerator1A = (x11 - x10) * (y00 - y10) - (y11 - y10) * (x00 - x10);\n        var numerator1B = (x01 - x00) * (y00 - y10) - (y01 - y00) * (x00 - x10);\n        var denominator1 = (y11 - y10) * (x01 - x00) - (x11 - x10) * (y01 - y00);\n\n        // If denominator = 0, then lines are parallel. If denominator = 0 and both numerators are 0, then coincident\n        if (denominator1 === 0) {\n            return;\n        }\n\n        var ua1 = numerator1A / denominator1;\n        var ub1 = numerator1B / denominator1;\n\n        if (ua1 >= 0 && ua1 <= 1 && ub1 >= 0 && ub1 <= 1) {\n            if (!defined(result)) {\n                result = new Cartesian2();\n            }\n\n            result.x = x00 + ua1 * (x01 - x00);\n            result.y = y00 + ua1 * (y01 - y00);\n\n            return result;\n        }\n    };\nexport default Intersections2D;\n","import AttributeCompression from '../Core/AttributeCompression.js';\nimport BoundingSphere from '../Core/BoundingSphere.js';\nimport Cartesian2 from '../Core/Cartesian2.js';\nimport Cartesian3 from '../Core/Cartesian3.js';\nimport Cartographic from '../Core/Cartographic.js';\nimport defined from '../Core/defined.js';\nimport Ellipsoid from '../Core/Ellipsoid.js';\nimport EllipsoidalOccluder from '../Core/EllipsoidalOccluder.js';\nimport IndexDatatype from '../Core/IndexDatatype.js';\nimport Intersections2D from '../Core/Intersections2D.js';\nimport CesiumMath from '../Core/Math.js';\nimport OrientedBoundingBox from '../Core/OrientedBoundingBox.js';\nimport Rectangle from '../Core/Rectangle.js';\nimport TerrainEncoding from '../Core/TerrainEncoding.js';\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\n\n    var maxShort = 32767;\n    var halfMaxShort = (maxShort / 2) | 0;\n\n    var clipScratch = [];\n    var clipScratch2 = [];\n    var verticesScratch = [];\n    var cartographicScratch = new Cartographic();\n    var cartesian3Scratch = new Cartesian3();\n    var uScratch = [];\n    var vScratch = [];\n    var heightScratch = [];\n    var indicesScratch = [];\n    var normalsScratch = [];\n    var horizonOcclusionPointScratch = new Cartesian3();\n    var boundingSphereScratch = new BoundingSphere();\n    var orientedBoundingBoxScratch = new OrientedBoundingBox();\n    var decodeTexCoordsScratch = new Cartesian2();\n    var octEncodedNormalScratch = new Cartesian3();\n\n    function upsampleQuantizedTerrainMesh(parameters, transferableObjects) {\n        var isEastChild = parameters.isEastChild;\n        var isNorthChild = parameters.isNorthChild;\n\n        var minU = isEastChild ? halfMaxShort : 0;\n        var maxU = isEastChild ? maxShort : halfMaxShort;\n        var minV = isNorthChild ? halfMaxShort : 0;\n        var maxV = isNorthChild ? maxShort : halfMaxShort;\n\n        var uBuffer = uScratch;\n        var vBuffer = vScratch;\n        var heightBuffer = heightScratch;\n        var normalBuffer = normalsScratch;\n\n        uBuffer.length = 0;\n        vBuffer.length = 0;\n        heightBuffer.length = 0;\n        normalBuffer.length = 0;\n\n        var indices = indicesScratch;\n        indices.length = 0;\n\n        var vertexMap = {};\n\n        var parentVertices = parameters.vertices;\n        var parentIndices = parameters.indices;\n        parentIndices = parentIndices.subarray(0, parameters.indexCountWithoutSkirts);\n\n        var encoding = TerrainEncoding.clone(parameters.encoding);\n        var hasVertexNormals = encoding.hasVertexNormals;\n        var exaggeration = parameters.exaggeration;\n\n        var vertexCount = 0;\n        var quantizedVertexCount = parameters.vertexCountWithoutSkirts;\n\n        var parentMinimumHeight = parameters.minimumHeight;\n        var parentMaximumHeight = parameters.maximumHeight;\n\n        var parentUBuffer = new Array(quantizedVertexCount);\n        var parentVBuffer = new Array(quantizedVertexCount);\n        var parentHeightBuffer = new Array(quantizedVertexCount);\n        var parentNormalBuffer = hasVertexNormals ? new Array(quantizedVertexCount * 2) : undefined;\n\n        var threshold = 20;\n        var height;\n\n        var i, n;\n        var u, v;\n        for (i = 0, n = 0; i < quantizedVertexCount; ++i, n += 2) {\n            var texCoords = encoding.decodeTextureCoordinates(parentVertices, i, decodeTexCoordsScratch);\n            height  = encoding.decodeHeight(parentVertices, i) / exaggeration;\n\n            u = CesiumMath.clamp((texCoords.x * maxShort) | 0, 0, maxShort);\n            v = CesiumMath.clamp((texCoords.y * maxShort) | 0, 0, maxShort);\n            parentHeightBuffer[i] = CesiumMath.clamp((((height - parentMinimumHeight) / (parentMaximumHeight - parentMinimumHeight)) * maxShort) | 0, 0, maxShort);\n\n            if (u < threshold) {\n                u = 0;\n            }\n\n            if (v < threshold) {\n                v = 0;\n            }\n\n            if (maxShort - u < threshold) {\n                u = maxShort;\n            }\n\n            if (maxShort - v < threshold) {\n                v = maxShort;\n            }\n\n            parentUBuffer[i] = u;\n            parentVBuffer[i] = v;\n\n            if (hasVertexNormals) {\n                var encodedNormal = encoding.getOctEncodedNormal(parentVertices, i, octEncodedNormalScratch);\n                parentNormalBuffer[n] = encodedNormal.x;\n                parentNormalBuffer[n + 1] = encodedNormal.y;\n            }\n\n            if ((isEastChild && u >= halfMaxShort || !isEastChild && u <= halfMaxShort) &&\n                (isNorthChild && v >= halfMaxShort || !isNorthChild && v <= halfMaxShort)) {\n\n                vertexMap[i] = vertexCount;\n                uBuffer.push(u);\n                vBuffer.push(v);\n                heightBuffer.push(parentHeightBuffer[i]);\n                if (hasVertexNormals) {\n                    normalBuffer.push(parentNormalBuffer[n]);\n                    normalBuffer.push(parentNormalBuffer[n + 1]);\n                }\n\n                ++vertexCount;\n            }\n        }\n\n        var triangleVertices = [];\n        triangleVertices.push(new Vertex());\n        triangleVertices.push(new Vertex());\n        triangleVertices.push(new Vertex());\n\n        var clippedTriangleVertices = [];\n        clippedTriangleVertices.push(new Vertex());\n        clippedTriangleVertices.push(new Vertex());\n        clippedTriangleVertices.push(new Vertex());\n\n        var clippedIndex;\n        var clipped2;\n\n        for (i = 0; i < parentIndices.length; i += 3) {\n            var i0 = parentIndices[i];\n            var i1 = parentIndices[i + 1];\n            var i2 = parentIndices[i + 2];\n\n            var u0 = parentUBuffer[i0];\n            var u1 = parentUBuffer[i1];\n            var u2 = parentUBuffer[i2];\n\n            triangleVertices[0].initializeIndexed(parentUBuffer, parentVBuffer, parentHeightBuffer, parentNormalBuffer, i0);\n            triangleVertices[1].initializeIndexed(parentUBuffer, parentVBuffer, parentHeightBuffer, parentNormalBuffer, i1);\n            triangleVertices[2].initializeIndexed(parentUBuffer, parentVBuffer, parentHeightBuffer, parentNormalBuffer, i2);\n\n            // Clip triangle on the east-west boundary.\n            var clipped = Intersections2D.clipTriangleAtAxisAlignedThreshold(halfMaxShort, isEastChild, u0, u1, u2, clipScratch);\n\n            // Get the first clipped triangle, if any.\n            clippedIndex = 0;\n\n            if (clippedIndex >= clipped.length) {\n                continue;\n            }\n            clippedIndex = clippedTriangleVertices[0].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\n\n            if (clippedIndex >= clipped.length) {\n                continue;\n            }\n            clippedIndex = clippedTriangleVertices[1].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\n\n            if (clippedIndex >= clipped.length) {\n                continue;\n            }\n            clippedIndex = clippedTriangleVertices[2].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\n\n            // Clip the triangle against the North-south boundary.\n            clipped2 = Intersections2D.clipTriangleAtAxisAlignedThreshold(halfMaxShort, isNorthChild, clippedTriangleVertices[0].getV(), clippedTriangleVertices[1].getV(), clippedTriangleVertices[2].getV(), clipScratch2);\n            addClippedPolygon(uBuffer, vBuffer, heightBuffer, normalBuffer, indices, vertexMap, clipped2, clippedTriangleVertices, hasVertexNormals);\n\n            // If there's another vertex in the original clipped result,\n            // it forms a second triangle.  Clip it as well.\n            if (clippedIndex < clipped.length) {\n                clippedTriangleVertices[2].clone(clippedTriangleVertices[1]);\n                clippedTriangleVertices[2].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\n\n                clipped2 = Intersections2D.clipTriangleAtAxisAlignedThreshold(halfMaxShort, isNorthChild, clippedTriangleVertices[0].getV(), clippedTriangleVertices[1].getV(), clippedTriangleVertices[2].getV(), clipScratch2);\n                addClippedPolygon(uBuffer, vBuffer, heightBuffer, normalBuffer, indices, vertexMap, clipped2, clippedTriangleVertices, hasVertexNormals);\n            }\n        }\n\n        var uOffset = isEastChild ? -maxShort : 0;\n        var vOffset = isNorthChild ? -maxShort : 0;\n\n        var westIndices = [];\n        var southIndices = [];\n        var eastIndices = [];\n        var northIndices = [];\n\n        var minimumHeight = Number.MAX_VALUE;\n        var maximumHeight = -minimumHeight;\n\n        var cartesianVertices = verticesScratch;\n        cartesianVertices.length = 0;\n\n        var ellipsoid = Ellipsoid.clone(parameters.ellipsoid);\n        var rectangle = Rectangle.clone(parameters.childRectangle);\n\n        var north = rectangle.north;\n        var south = rectangle.south;\n        var east = rectangle.east;\n        var west = rectangle.west;\n\n        if (east < west) {\n            east += CesiumMath.TWO_PI;\n        }\n\n        for (i = 0; i < uBuffer.length; ++i) {\n            u = Math.round(uBuffer[i]);\n            if (u <= minU) {\n                westIndices.push(i);\n                u = 0;\n            } else if (u >= maxU) {\n                eastIndices.push(i);\n                u = maxShort;\n            } else {\n                u = u * 2 + uOffset;\n            }\n\n            uBuffer[i] = u;\n\n            v = Math.round(vBuffer[i]);\n            if (v <= minV) {\n                southIndices.push(i);\n                v = 0;\n            } else if (v >= maxV) {\n                northIndices.push(i);\n                v = maxShort;\n            } else {\n                v = v * 2 + vOffset;\n            }\n\n            vBuffer[i] = v;\n\n            height = CesiumMath.lerp(parentMinimumHeight, parentMaximumHeight, heightBuffer[i] / maxShort);\n            if (height < minimumHeight) {\n                minimumHeight = height;\n            }\n            if (height > maximumHeight) {\n                maximumHeight = height;\n            }\n\n            heightBuffer[i] = height;\n\n            cartographicScratch.longitude = CesiumMath.lerp(west, east, u / maxShort);\n            cartographicScratch.latitude = CesiumMath.lerp(south, north, v / maxShort);\n            cartographicScratch.height = height;\n\n            ellipsoid.cartographicToCartesian(cartographicScratch, cartesian3Scratch);\n\n            cartesianVertices.push(cartesian3Scratch.x);\n            cartesianVertices.push(cartesian3Scratch.y);\n            cartesianVertices.push(cartesian3Scratch.z);\n        }\n\n        var boundingSphere = BoundingSphere.fromVertices(cartesianVertices, Cartesian3.ZERO, 3, boundingSphereScratch);\n        var orientedBoundingBox = OrientedBoundingBox.fromRectangle(rectangle, minimumHeight, maximumHeight, ellipsoid, orientedBoundingBoxScratch);\n\n        var occluder = new EllipsoidalOccluder(ellipsoid);\n        var horizonOcclusionPoint = occluder.computeHorizonCullingPointFromVerticesPossiblyUnderEllipsoid(boundingSphere.center, cartesianVertices, 3, boundingSphere.center, minimumHeight, horizonOcclusionPointScratch);\n\n        var heightRange = maximumHeight - minimumHeight;\n\n        var vertices = new Uint16Array(uBuffer.length + vBuffer.length + heightBuffer.length);\n\n        for (i = 0; i < uBuffer.length; ++i) {\n            vertices[i] = uBuffer[i];\n        }\n\n        var start = uBuffer.length;\n\n        for (i = 0; i < vBuffer.length; ++i) {\n            vertices[start + i] = vBuffer[i];\n        }\n\n        start += vBuffer.length;\n\n        for (i = 0; i < heightBuffer.length; ++i) {\n            vertices[start + i] = maxShort * (heightBuffer[i] - minimumHeight) / heightRange;\n        }\n\n        var indicesTypedArray = IndexDatatype.createTypedArray(uBuffer.length, indices);\n\n        var encodedNormals;\n        if (hasVertexNormals) {\n            var normalArray = new Uint8Array(normalBuffer);\n            transferableObjects.push(vertices.buffer, indicesTypedArray.buffer, normalArray.buffer);\n            encodedNormals = normalArray.buffer;\n        } else {\n            transferableObjects.push(vertices.buffer, indicesTypedArray.buffer);\n        }\n\n        return {\n            vertices : vertices.buffer,\n            encodedNormals : encodedNormals,\n            indices : indicesTypedArray.buffer,\n            minimumHeight : minimumHeight,\n            maximumHeight : maximumHeight,\n            westIndices : westIndices,\n            southIndices : southIndices,\n            eastIndices : eastIndices,\n            northIndices : northIndices,\n            boundingSphere : boundingSphere,\n            orientedBoundingBox : orientedBoundingBox,\n            horizonOcclusionPoint : horizonOcclusionPoint\n        };\n    }\n\n    function Vertex() {\n        this.vertexBuffer = undefined;\n        this.index = undefined;\n        this.first = undefined;\n        this.second = undefined;\n        this.ratio = undefined;\n    }\n\n    Vertex.prototype.clone = function(result) {\n        if (!defined(result)) {\n            result = new Vertex();\n        }\n\n        result.uBuffer = this.uBuffer;\n        result.vBuffer = this.vBuffer;\n        result.heightBuffer = this.heightBuffer;\n        result.normalBuffer = this.normalBuffer;\n        result.index = this.index;\n        result.first = this.first;\n        result.second = this.second;\n        result.ratio = this.ratio;\n\n        return result;\n    };\n\n    Vertex.prototype.initializeIndexed = function(uBuffer, vBuffer, heightBuffer, normalBuffer, index) {\n        this.uBuffer = uBuffer;\n        this.vBuffer = vBuffer;\n        this.heightBuffer = heightBuffer;\n        this.normalBuffer = normalBuffer;\n        this.index = index;\n        this.first = undefined;\n        this.second = undefined;\n        this.ratio = undefined;\n    };\n\n    Vertex.prototype.initializeFromClipResult = function(clipResult, index, vertices) {\n        var nextIndex = index + 1;\n\n        if (clipResult[index] !== -1) {\n            vertices[clipResult[index]].clone(this);\n        } else {\n            this.vertexBuffer = undefined;\n            this.index = undefined;\n            this.first = vertices[clipResult[nextIndex]];\n            ++nextIndex;\n            this.second = vertices[clipResult[nextIndex]];\n            ++nextIndex;\n            this.ratio = clipResult[nextIndex];\n            ++nextIndex;\n        }\n\n        return nextIndex;\n    };\n\n    Vertex.prototype.getKey = function() {\n        if (this.isIndexed()) {\n            return this.index;\n        }\n        return JSON.stringify({\n            first : this.first.getKey(),\n            second : this.second.getKey(),\n            ratio : this.ratio\n        });\n    };\n\n    Vertex.prototype.isIndexed = function() {\n        return defined(this.index);\n    };\n\n    Vertex.prototype.getH = function() {\n        if (defined(this.index)) {\n            return this.heightBuffer[this.index];\n        }\n        return CesiumMath.lerp(this.first.getH(), this.second.getH(), this.ratio);\n    };\n\n    Vertex.prototype.getU = function() {\n        if (defined(this.index)) {\n            return this.uBuffer[this.index];\n        }\n        return CesiumMath.lerp(this.first.getU(), this.second.getU(), this.ratio);\n    };\n\n    Vertex.prototype.getV = function() {\n        if (defined(this.index)) {\n            return this.vBuffer[this.index];\n        }\n        return CesiumMath.lerp(this.first.getV(), this.second.getV(), this.ratio);\n    };\n\n    var encodedScratch = new Cartesian2();\n    // An upsampled triangle may be clipped twice before it is assigned an index\n    // In this case, we need a buffer to handle the recursion of getNormalX() and getNormalY().\n    var depth = -1;\n    var cartesianScratch1 = [new Cartesian3(), new Cartesian3()];\n    var cartesianScratch2 = [new Cartesian3(), new Cartesian3()];\n    function lerpOctEncodedNormal(vertex, result) {\n        ++depth;\n\n        var first = cartesianScratch1[depth];\n        var second = cartesianScratch2[depth];\n\n        first = AttributeCompression.octDecode(vertex.first.getNormalX(), vertex.first.getNormalY(), first);\n        second = AttributeCompression.octDecode(vertex.second.getNormalX(), vertex.second.getNormalY(), second);\n        cartesian3Scratch = Cartesian3.lerp(first, second, vertex.ratio, cartesian3Scratch);\n        Cartesian3.normalize(cartesian3Scratch, cartesian3Scratch);\n\n        AttributeCompression.octEncode(cartesian3Scratch, result);\n\n        --depth;\n\n        return result;\n    }\n\n    Vertex.prototype.getNormalX = function() {\n        if (defined(this.index)) {\n            return this.normalBuffer[this.index * 2];\n        }\n\n        encodedScratch = lerpOctEncodedNormal(this, encodedScratch);\n        return encodedScratch.x;\n    };\n\n    Vertex.prototype.getNormalY = function() {\n        if (defined(this.index)) {\n            return this.normalBuffer[this.index * 2 + 1];\n        }\n\n        encodedScratch = lerpOctEncodedNormal(this, encodedScratch);\n        return encodedScratch.y;\n    };\n\n    var polygonVertices = [];\n    polygonVertices.push(new Vertex());\n    polygonVertices.push(new Vertex());\n    polygonVertices.push(new Vertex());\n    polygonVertices.push(new Vertex());\n\n    function addClippedPolygon(uBuffer, vBuffer, heightBuffer, normalBuffer, indices, vertexMap, clipped, triangleVertices, hasVertexNormals) {\n        if (clipped.length === 0) {\n            return;\n        }\n\n        var numVertices = 0;\n        var clippedIndex = 0;\n        while (clippedIndex < clipped.length) {\n            clippedIndex = polygonVertices[numVertices++].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\n        }\n\n        for (var i = 0; i < numVertices; ++i) {\n            var polygonVertex = polygonVertices[i];\n            if (!polygonVertex.isIndexed()) {\n                var key = polygonVertex.getKey();\n                if (defined(vertexMap[key])) {\n                    polygonVertex.newIndex = vertexMap[key];\n                } else {\n                    var newIndex = uBuffer.length;\n                    uBuffer.push(polygonVertex.getU());\n                    vBuffer.push(polygonVertex.getV());\n                    heightBuffer.push(polygonVertex.getH());\n                    if (hasVertexNormals) {\n                        normalBuffer.push(polygonVertex.getNormalX());\n                        normalBuffer.push(polygonVertex.getNormalY());\n                    }\n                    polygonVertex.newIndex = newIndex;\n                    vertexMap[key] = newIndex;\n                }\n            } else {\n                polygonVertex.newIndex = vertexMap[polygonVertex.index];\n                polygonVertex.uBuffer = uBuffer;\n                polygonVertex.vBuffer = vBuffer;\n                polygonVertex.heightBuffer = heightBuffer;\n                if (hasVertexNormals) {\n                    polygonVertex.normalBuffer = normalBuffer;\n                }\n            }\n        }\n\n        if (numVertices === 3) {\n            // A triangle.\n            indices.push(polygonVertices[0].newIndex);\n            indices.push(polygonVertices[1].newIndex);\n            indices.push(polygonVertices[2].newIndex);\n        } else if (numVertices === 4) {\n            // A quad - two triangles.\n            indices.push(polygonVertices[0].newIndex);\n            indices.push(polygonVertices[1].newIndex);\n            indices.push(polygonVertices[2].newIndex);\n\n            indices.push(polygonVertices[0].newIndex);\n            indices.push(polygonVertices[2].newIndex);\n            indices.push(polygonVertices[3].newIndex);\n        }\n    }\nexport default createTaskProcessorWorker(upsampleQuantizedTerrainMesh);\n"],"names":["defined","DeveloperError","Cartesian3","Check","Cartesian2","Cartographic","BoundingSphere","OrientedBoundingBox","TerrainEncoding","CesiumMath","Ellipsoid","Rectangle","EllipsoidalOccluder","IndexDatatype","AttributeCompression"],"mappings":"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"}