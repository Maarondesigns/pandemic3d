{"version":3,"file":"BoundingRectangle-a263ff52.js","sources":["../../../../Source/Core/BoundingRectangle.js"],"sourcesContent":["import Cartesian2 from './Cartesian2.js';\nimport Cartographic from './Cartographic.js';\nimport Check from './Check.js';\nimport defaultValue from './defaultValue.js';\nimport defined from './defined.js';\nimport GeographicProjection from './GeographicProjection.js';\nimport Intersect from './Intersect.js';\nimport Rectangle from './Rectangle.js';\n\n    /**\n     * A bounding rectangle given by a corner, width and height.\n     * @alias BoundingRectangle\n     * @constructor\n     *\n     * @param {Number} [x=0.0] The x coordinate of the rectangle.\n     * @param {Number} [y=0.0] The y coordinate of the rectangle.\n     * @param {Number} [width=0.0] The width of the rectangle.\n     * @param {Number} [height=0.0] The height of the rectangle.\n     *\n     * @see BoundingSphere\n     * @see Packable\n     */\n    function BoundingRectangle(x, y, width, height) {\n        /**\n         * The x coordinate of the rectangle.\n         * @type {Number}\n         * @default 0.0\n         */\n        this.x = defaultValue(x, 0.0);\n\n        /**\n         * The y coordinate of the rectangle.\n         * @type {Number}\n         * @default 0.0\n         */\n        this.y = defaultValue(y, 0.0);\n\n        /**\n         * The width of the rectangle.\n         * @type {Number}\n         * @default 0.0\n         */\n        this.width = defaultValue(width, 0.0);\n\n        /**\n         * The height of the rectangle.\n         * @type {Number}\n         * @default 0.0\n         */\n        this.height = defaultValue(height, 0.0);\n    }\n\n    /**\n     * The number of elements used to pack the object into an array.\n     * @type {Number}\n     */\n    BoundingRectangle.packedLength = 4;\n\n    /**\n     * Stores the provided instance into the provided array.\n     *\n     * @param {BoundingRectangle} value The value to pack.\n     * @param {Number[]} array The array to pack into.\n     * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n     *\n     * @returns {Number[]} The array that was packed into\n     */\n    BoundingRectangle.pack = function(value, array, startingIndex) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.typeOf.object('value', value);\n        Check.defined('array', array);\n        //>>includeEnd('debug');\n\n        startingIndex = defaultValue(startingIndex, 0);\n\n        array[startingIndex++] = value.x;\n        array[startingIndex++] = value.y;\n        array[startingIndex++] = value.width;\n        array[startingIndex] = value.height;\n\n        return array;\n    };\n\n    /**\n     * Retrieves an instance from a packed array.\n     *\n     * @param {Number[]} array The packed array.\n     * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n     * @param {BoundingRectangle} [result] The object into which to store the result.\n     * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\n     */\n    BoundingRectangle.unpack = function(array, startingIndex, result) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.defined('array', array);\n        //>>includeEnd('debug');\n\n        startingIndex = defaultValue(startingIndex, 0);\n\n        if (!defined(result)) {\n            result = new BoundingRectangle();\n        }\n        result.x = array[startingIndex++];\n        result.y = array[startingIndex++];\n        result.width = array[startingIndex++];\n        result.height = array[startingIndex];\n        return result;\n    };\n\n    /**\n     * Computes a bounding rectangle enclosing the list of 2D points.\n     * The rectangle is oriented with the corner at the bottom left.\n     *\n     * @param {Cartesian2[]} positions List of points that the bounding rectangle will enclose.  Each point must have <code>x</code> and <code>y</code> properties.\n     * @param {BoundingRectangle} [result] The object onto which to store the result.\n     * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\n     */\n    BoundingRectangle.fromPoints = function(positions, result) {\n        if (!defined(result)) {\n            result = new BoundingRectangle();\n        }\n\n        if (!defined(positions) || positions.length === 0) {\n            result.x = 0;\n            result.y = 0;\n            result.width = 0;\n            result.height = 0;\n            return result;\n        }\n\n        var length = positions.length;\n\n        var minimumX = positions[0].x;\n        var minimumY = positions[0].y;\n\n        var maximumX = positions[0].x;\n        var maximumY = positions[0].y;\n\n        for ( var i = 1; i < length; i++) {\n            var p = positions[i];\n            var x = p.x;\n            var y = p.y;\n\n            minimumX = Math.min(x, minimumX);\n            maximumX = Math.max(x, maximumX);\n            minimumY = Math.min(y, minimumY);\n            maximumY = Math.max(y, maximumY);\n        }\n\n        result.x = minimumX;\n        result.y = minimumY;\n        result.width = maximumX - minimumX;\n        result.height = maximumY - minimumY;\n        return result;\n    };\n\n    var defaultProjection = new GeographicProjection();\n    var fromRectangleLowerLeft = new Cartographic();\n    var fromRectangleUpperRight = new Cartographic();\n    /**\n     * Computes a bounding rectangle from a rectangle.\n     *\n     * @param {Rectangle} rectangle The valid rectangle used to create a bounding rectangle.\n     * @param {Object} [projection=GeographicProjection] The projection used to project the rectangle into 2D.\n     * @param {BoundingRectangle} [result] The object onto which to store the result.\n     * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\n     */\n    BoundingRectangle.fromRectangle = function(rectangle, projection, result) {\n        if (!defined(result)) {\n            result = new BoundingRectangle();\n        }\n\n        if (!defined(rectangle)) {\n            result.x = 0;\n            result.y = 0;\n            result.width = 0;\n            result.height = 0;\n            return result;\n        }\n\n        projection = defaultValue(projection, defaultProjection);\n\n        var lowerLeft = projection.project(Rectangle.southwest(rectangle, fromRectangleLowerLeft));\n        var upperRight = projection.project(Rectangle.northeast(rectangle, fromRectangleUpperRight));\n\n        Cartesian2.subtract(upperRight, lowerLeft, upperRight);\n\n        result.x = lowerLeft.x;\n        result.y = lowerLeft.y;\n        result.width = upperRight.x;\n        result.height = upperRight.y;\n        return result;\n    };\n\n    /**\n     * Duplicates a BoundingRectangle instance.\n     *\n     * @param {BoundingRectangle} rectangle The bounding rectangle to duplicate.\n     * @param {BoundingRectangle} [result] The object onto which to store the result.\n     * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided. (Returns undefined if rectangle is undefined)\n     */\n    BoundingRectangle.clone = function(rectangle, result) {\n        if (!defined(rectangle)) {\n            return undefined;\n        }\n\n        if (!defined(result)) {\n            return new BoundingRectangle(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n        }\n\n        result.x = rectangle.x;\n        result.y = rectangle.y;\n        result.width = rectangle.width;\n        result.height = rectangle.height;\n        return result;\n    };\n\n    /**\n     * Computes a bounding rectangle that is the union of the left and right bounding rectangles.\n     *\n     * @param {BoundingRectangle} left A rectangle to enclose in bounding rectangle.\n     * @param {BoundingRectangle} right A rectangle to enclose in a bounding rectangle.\n     * @param {BoundingRectangle} [result] The object onto which to store the result.\n     * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\n     */\n    BoundingRectangle.union = function(left, right, result) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.typeOf.object('left', left);\n        Check.typeOf.object('right', right);\n        //>>includeEnd('debug');\n\n        if (!defined(result)) {\n            result = new BoundingRectangle();\n        }\n\n        var lowerLeftX = Math.min(left.x, right.x);\n        var lowerLeftY = Math.min(left.y, right.y);\n        var upperRightX = Math.max(left.x + left.width, right.x + right.width);\n        var upperRightY = Math.max(left.y + left.height, right.y + right.height);\n\n        result.x = lowerLeftX;\n        result.y = lowerLeftY;\n        result.width = upperRightX - lowerLeftX;\n        result.height = upperRightY - lowerLeftY;\n        return result;\n    };\n\n    /**\n     * Computes a bounding rectangle by enlarging the provided rectangle until it contains the provided point.\n     *\n     * @param {BoundingRectangle} rectangle A rectangle to expand.\n     * @param {Cartesian2} point A point to enclose in a bounding rectangle.\n     * @param {BoundingRectangle} [result] The object onto which to store the result.\n     * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\n     */\n    BoundingRectangle.expand = function(rectangle, point, result) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.typeOf.object('rectangle', rectangle);\n        Check.typeOf.object('point', point);\n        //>>includeEnd('debug');\n\n        result = BoundingRectangle.clone(rectangle, result);\n\n        var width = point.x - result.x;\n        var height = point.y - result.y;\n\n        if (width > result.width) {\n            result.width = width;\n        } else if (width < 0) {\n            result.width -= width;\n            result.x = point.x;\n        }\n\n        if (height > result.height) {\n            result.height = height;\n        } else if (height < 0) {\n            result.height -= height;\n            result.y = point.y;\n        }\n\n        return result;\n    };\n\n    /**\n     * Determines if two rectangles intersect.\n     *\n     * @param {BoundingRectangle} left A rectangle to check for intersection.\n     * @param {BoundingRectangle} right The other rectangle to check for intersection.\n     * @returns {Intersect} <code>Intersect.INTESECTING</code> if the rectangles intersect, <code>Intersect.OUTSIDE</code> otherwise.\n     */\n    BoundingRectangle.intersect = function(left, right) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.typeOf.object('left', left);\n        Check.typeOf.object('right', right);\n        //>>includeEnd('debug');\n\n        var leftX = left.x;\n        var leftY = left.y;\n        var rightX = right.x;\n        var rightY = right.y;\n        if (!(leftX > rightX + right.width ||\n              leftX + left.width < rightX ||\n              leftY + left.height < rightY ||\n              leftY > rightY + right.height)) {\n            return Intersect.INTERSECTING;\n        }\n\n        return Intersect.OUTSIDE;\n    };\n\n    /**\n     * Compares the provided BoundingRectangles componentwise and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {BoundingRectangle} [left] The first BoundingRectangle.\n     * @param {BoundingRectangle} [right] The second BoundingRectangle.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    BoundingRectangle.equals = function(left, right) {\n        return (left === right) ||\n               ((defined(left)) &&\n                (defined(right)) &&\n                (left.x === right.x) &&\n                (left.y === right.y) &&\n                (left.width === right.width) &&\n                (left.height === right.height));\n    };\n\n    /**\n     * Duplicates this BoundingRectangle instance.\n     *\n     * @param {BoundingRectangle} [result] The object onto which to store the result.\n     * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\n     */\n    BoundingRectangle.prototype.clone = function(result) {\n        return BoundingRectangle.clone(this, result);\n    };\n\n    /**\n     * Determines if this rectangle intersects with another.\n     *\n     * @param {BoundingRectangle} right A rectangle to check for intersection.\n     * @returns {Intersect} <code>Intersect.INTESECTING</code> if the rectangles intersect, <code>Intersect.OUTSIDE</code> otherwise.\n     */\n    BoundingRectangle.prototype.intersect = function(right) {\n        return BoundingRectangle.intersect(this, right);\n    };\n\n    /**\n     * Compares this BoundingRectangle against the provided BoundingRectangle componentwise and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {BoundingRectangle} [right] The right hand side BoundingRectangle.\n     * @returns {Boolean} <code>true</code> if they are equal, <code>false</code> otherwise.\n     */\n    BoundingRectangle.prototype.equals = function(right) {\n        return BoundingRectangle.equals(this, right);\n    };\nexport default BoundingRectangle;\n"],"names":["defaultValue","Check","defined","GeographicProjection","Cartographic","Rectangle","Cartesian2","Intersect"],"mappings":"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"}