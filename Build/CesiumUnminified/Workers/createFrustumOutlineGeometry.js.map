{"version":3,"file":"createFrustumOutlineGeometry.js","sources":["../../../../Source/Core/FrustumOutlineGeometry.js","../../../../Source/WorkersES6/createFrustumOutlineGeometry.js"],"sourcesContent":["import BoundingSphere from './BoundingSphere.js';\nimport Cartesian3 from './Cartesian3.js';\nimport Check from './Check.js';\nimport ComponentDatatype from './ComponentDatatype.js';\nimport defaultValue from './defaultValue.js';\nimport defined from './defined.js';\nimport FrustumGeometry from './FrustumGeometry.js';\nimport Geometry from './Geometry.js';\nimport GeometryAttribute from './GeometryAttribute.js';\nimport GeometryAttributes from './GeometryAttributes.js';\nimport OrthographicFrustum from './OrthographicFrustum.js';\nimport PerspectiveFrustum from './PerspectiveFrustum.js';\nimport PrimitiveType from './PrimitiveType.js';\nimport Quaternion from './Quaternion.js';\n\n    var PERSPECTIVE = 0;\n    var ORTHOGRAPHIC = 1;\n\n    /**\n     * A description of the outline of a frustum with the given the origin and orientation.\n     *\n     * @alias FrustumOutlineGeometry\n     * @constructor\n     *\n     * @param {Object} options Object with the following properties:\n     * @param {PerspectiveFrustum|OrthographicFrustum} options.frustum The frustum.\n     * @param {Cartesian3} options.origin The origin of the frustum.\n     * @param {Quaternion} options.orientation The orientation of the frustum.\n     */\n    function FrustumOutlineGeometry(options) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.typeOf.object('options', options);\n        Check.typeOf.object('options.frustum', options.frustum);\n        Check.typeOf.object('options.origin', options.origin);\n        Check.typeOf.object('options.orientation', options.orientation);\n        //>>includeEnd('debug');\n\n        var frustum = options.frustum;\n        var orientation = options.orientation;\n        var origin = options.origin;\n\n        // This is private because it is used by DebugCameraPrimitive to draw a multi-frustum by\n        // creating multiple FrustumOutlineGeometrys. This way the near plane of one frustum doesn't overlap\n        // the far plane of another.\n        var drawNearPlane = defaultValue(options._drawNearPlane, true);\n\n        var frustumType;\n        var frustumPackedLength;\n        if (frustum instanceof PerspectiveFrustum) {\n            frustumType = PERSPECTIVE;\n            frustumPackedLength = PerspectiveFrustum.packedLength;\n        } else if (frustum instanceof OrthographicFrustum) {\n            frustumType = ORTHOGRAPHIC;\n            frustumPackedLength = OrthographicFrustum.packedLength;\n        }\n\n        this._frustumType = frustumType;\n        this._frustum = frustum.clone();\n        this._origin = Cartesian3.clone(origin);\n        this._orientation = Quaternion.clone(orientation);\n        this._drawNearPlane = drawNearPlane;\n        this._workerName = 'createFrustumOutlineGeometry';\n\n        /**\n         * The number of elements used to pack the object into an array.\n         * @type {Number}\n         */\n        this.packedLength = 2 + frustumPackedLength + Cartesian3.packedLength + Quaternion.packedLength;\n    }\n\n    /**\n     * Stores the provided instance into the provided array.\n     *\n     * @param {FrustumOutlineGeometry} value The value to pack.\n     * @param {Number[]} array The array to pack into.\n     * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n     *\n     * @returns {Number[]} The array that was packed into\n     */\n    FrustumOutlineGeometry.pack = function(value, array, startingIndex) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.typeOf.object('value', value);\n        Check.defined('array', array);\n        //>>includeEnd('debug');\n\n        startingIndex = defaultValue(startingIndex, 0);\n\n        var frustumType = value._frustumType;\n        var frustum = value._frustum;\n\n        array[startingIndex++] = frustumType;\n\n        if (frustumType === PERSPECTIVE) {\n            PerspectiveFrustum.pack(frustum, array, startingIndex);\n            startingIndex += PerspectiveFrustum.packedLength;\n        } else {\n            OrthographicFrustum.pack(frustum, array, startingIndex);\n            startingIndex += OrthographicFrustum.packedLength;\n        }\n\n        Cartesian3.pack(value._origin, array, startingIndex);\n        startingIndex += Cartesian3.packedLength;\n        Quaternion.pack(value._orientation, array, startingIndex);\n        startingIndex += Quaternion.packedLength;\n        array[startingIndex] = value._drawNearPlane ? 1.0 : 0.0;\n\n        return array;\n    };\n\n    var scratchPackPerspective = new PerspectiveFrustum();\n    var scratchPackOrthographic = new OrthographicFrustum();\n    var scratchPackQuaternion = new Quaternion();\n    var scratchPackorigin = new Cartesian3();\n\n    /**\n     * Retrieves an instance from a packed array.\n     *\n     * @param {Number[]} array The packed array.\n     * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n     * @param {FrustumOutlineGeometry} [result] The object into which to store the result.\n     */\n    FrustumOutlineGeometry.unpack = function(array, startingIndex, result) {\n        //>>includeStart('debug', pragmas.debug);\n        Check.defined('array', array);\n        //>>includeEnd('debug');\n\n        startingIndex = defaultValue(startingIndex, 0);\n\n        var frustumType = array[startingIndex++];\n\n        var frustum;\n        if (frustumType === PERSPECTIVE) {\n            frustum = PerspectiveFrustum.unpack(array, startingIndex, scratchPackPerspective);\n            startingIndex += PerspectiveFrustum.packedLength;\n        } else {\n            frustum = OrthographicFrustum.unpack(array, startingIndex, scratchPackOrthographic);\n            startingIndex += OrthographicFrustum.packedLength;\n        }\n\n        var origin = Cartesian3.unpack(array, startingIndex, scratchPackorigin);\n        startingIndex += Cartesian3.packedLength;\n        var orientation = Quaternion.unpack(array, startingIndex, scratchPackQuaternion);\n        startingIndex += Quaternion.packedLength;\n        var drawNearPlane = array[startingIndex] === 1.0;\n\n        if (!defined(result)) {\n            return new FrustumOutlineGeometry({\n                frustum : frustum,\n                origin : origin,\n                orientation : orientation,\n                _drawNearPlane : drawNearPlane\n            });\n        }\n\n        var frustumResult = frustumType === result._frustumType ? result._frustum : undefined;\n        result._frustum = frustum.clone(frustumResult);\n\n        result._frustumType = frustumType;\n        result._origin = Cartesian3.clone(origin, result._origin);\n        result._orientation = Quaternion.clone(orientation, result._orientation);\n        result._drawNearPlane = drawNearPlane;\n\n        return result;\n    };\n\n    /**\n     * Computes the geometric representation of a frustum outline, including its vertices, indices, and a bounding sphere.\n     *\n     * @param {FrustumOutlineGeometry} frustumGeometry A description of the frustum.\n     * @returns {Geometry|undefined} The computed vertices and indices.\n     */\n    FrustumOutlineGeometry.createGeometry = function(frustumGeometry) {\n        var frustumType = frustumGeometry._frustumType;\n        var frustum = frustumGeometry._frustum;\n        var origin = frustumGeometry._origin;\n        var orientation = frustumGeometry._orientation;\n        var drawNearPlane = frustumGeometry._drawNearPlane;\n\n        var positions = new Float64Array(3 * 4 * 2);\n        FrustumGeometry._computeNearFarPlanes(origin, orientation, frustumType, frustum, positions);\n\n        var attributes = new GeometryAttributes({\n            position : new GeometryAttribute({\n                componentDatatype : ComponentDatatype.DOUBLE,\n                componentsPerAttribute : 3,\n                values : positions\n            })\n        });\n\n        var offset;\n        var index;\n\n        var numberOfPlanes = drawNearPlane ? 2 : 1;\n        var indices = new Uint16Array(8 * (numberOfPlanes + 1));\n\n        // Build the near/far planes\n        var i = drawNearPlane ? 0 : 1;\n        for (; i < 2; ++i) {\n            offset = drawNearPlane ? i * 8 : 0;\n            index = i * 4;\n\n            indices[offset] = index;\n            indices[offset + 1] = index + 1;\n            indices[offset + 2] = index + 1;\n            indices[offset + 3] = index + 2;\n            indices[offset + 4] = index + 2;\n            indices[offset + 5] = index + 3;\n            indices[offset + 6] = index + 3;\n            indices[offset + 7] = index;\n        }\n\n        // Build the sides of the frustums\n        for (i = 0; i < 2; ++i) {\n            offset = (numberOfPlanes + i) * 8;\n            index = i * 4;\n\n            indices[offset] = index;\n            indices[offset + 1] = index + 4;\n            indices[offset + 2] = index + 1;\n            indices[offset + 3] = index + 5;\n            indices[offset + 4] = index + 2;\n            indices[offset + 5] = index + 6;\n            indices[offset + 6] = index + 3;\n            indices[offset + 7] = index + 7;\n        }\n\n        return new Geometry({\n            attributes : attributes,\n            indices : indices,\n            primitiveType : PrimitiveType.LINES,\n            boundingSphere : BoundingSphere.fromVertices(positions)\n        });\n    };\nexport default FrustumOutlineGeometry;\n","import defined from '../Core/defined.js';\nimport FrustumOutlineGeometry from '../Core/FrustumOutlineGeometry.js';\n\n    function createFrustumOutlineGeometry(frustumGeometry, offset) {\n        if (defined(offset)) {\n            frustumGeometry = FrustumOutlineGeometry.unpack(frustumGeometry, offset);\n        }\n        return FrustumOutlineGeometry.createGeometry(frustumGeometry);\n    }\nexport default createFrustumOutlineGeometry;\n"],"names":["Check","defaultValue","PerspectiveFrustum","OrthographicFrustum","Cartesian3","Quaternion","defined","FrustumGeometry","GeometryAttributes","GeometryAttribute","ComponentDatatype","Geometry","PrimitiveType","BoundingSphere"],"mappings":"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"}